Terminals unused in grammar

    TK_PR_INPUT
    TK_PR_OUTPUT
    TK_PR_FOR
    TK_ERRO


Grammar

    0 $accept: Program $end

    1 Program: DecList

    2 DecList: %empty
    3        | Dec DecList

    4 Dec: Type VarList ';'
    5    | Type Func

    6 DecLocal: Type VarListLocal

    7 VarListLocal: ID ',' VarListLocal
    8             | ID TK_OC_LE Lit ',' VarListLocal
    9             | ID
   10             | ID TK_OC_LE Lit

   11 Type: TK_PR_INT
   12     | TK_PR_FLOAT
   13     | TK_PR_BOOL
   14     | TK_PR_CHAR

   15 VarList: ID ',' VarList
   16        | ID '[' ArrayDimDec ']' ',' VarList
   17        | ID
   18        | ID '[' ArrayDimDec ']'

   19 ArrayDimDec: TK_LIT_INT '^' ArrayDimDecEnd
   20            | TK_LIT_INT

   21 ArrayDimDecEnd: TK_LIT_INT '^' ArrayDimDecEnd
   22               | TK_LIT_INT

   23 ArrayDim: Expr '^' ArrayDimEnd
   24         | Expr

   25 ArrayDimEnd: Expr '^' ArrayDimEnd
   26            | Expr

   27 Lit: TK_LIT_INT
   28    | TK_LIT_FLOAT
   29    | TK_LIT_FALSE
   30    | TK_LIT_TRUE
   31    | TK_LIT_CHAR

   32 Func: ID '(' ParamList ')' Block
   33     | ID '(' ')' Block

   34 ParamList: Param ParamListEnd

   35 ParamListEnd: %empty
   36             | ',' Param ParamListEnd

   37 Param: Type ID

   38 Block: '{' CommandList '}'
   39      | '{' '}'

   40 CommandList: Command CommandListEnd

   41 CommandListEnd: ';'
   42               | ';' Command CommandListEnd

   43 Command: Block
   44        | Flow
   45        | Atrib
   46        | DecLocal
   47        | Ret
   48        | FuncCall

   49 Atrib: ID '=' Expr
   50      | ID '[' ArrayDim ']' '=' Expr

   51 Flow: TK_PR_WHILE '(' Expr ')' Block
   52     | TK_PR_IF '(' Expr ')' TK_PR_THEN Block
   53     | TK_PR_IF '(' Expr ')' TK_PR_THEN Block TK_PR_ELSE Block

   54 Ret: TK_PR_RETURN Expr

   55 FuncCall: ID '(' ExprList ')'
   56         | ID '(' ')'

   57 ID: TK_IDENTIFICADOR

   58 Expr: Expr TK_OC_OR T
   59     | T

   60 T: T TK_OC_AND F
   61  | F

   62 F: F TK_OC_EQ G
   63  | F TK_OC_NE G
   64  | G

   65 G: G TK_OC_LE I
   66  | G TK_OC_GE I
   67  | I

   68 I: I '+' J
   69  | I '-' J
   70  | J

   71 J: J '*' K
   72  | J '/' K
   73  | J '%' K
   74  | K

   75 K: '-' L
   76  | '!' L
   77  | L

   78 L: '(' Expr ')'
   79  | FuncCall
   80  | ID '[' ArrayDim ']'
   81  | ID
   82  | Lit

   83 ExprList: Expr ExprListEnd

   84 ExprListEnd: %empty
   85            | ',' Expr ExprListEnd


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 76
    '%' (37) 73
    '(' (40) 32 33 51 52 53 55 56 78
    ')' (41) 32 33 51 52 53 55 56 78
    '*' (42) 71
    '+' (43) 68
    ',' (44) 7 8 15 16 36 85
    '-' (45) 69 75
    '/' (47) 72
    ';' (59) 4 41 42
    '=' (61) 49 50
    '[' (91) 16 18 50 80
    ']' (93) 16 18 50 80
    '^' (94) 19 21 23 25
    '{' (123) 38 39
    '}' (125) 38 39
    error (256)
    TK_PR_INT (258) 11
    TK_PR_FLOAT (259) 12
    TK_PR_BOOL (260) 13
    TK_PR_CHAR (261) 14
    TK_PR_IF (262) 52 53
    TK_PR_THEN (263) 52 53
    TK_PR_ELSE (264) 53
    TK_PR_WHILE (265) 51
    TK_PR_INPUT (266)
    TK_PR_OUTPUT (267)
    TK_PR_RETURN (268) 54
    TK_PR_FOR (269)
    TK_OC_LE (270) 8 10 65
    TK_OC_GE (271) 66
    TK_OC_EQ (272) 62
    TK_OC_NE (273) 63
    TK_OC_AND (274) 60
    TK_OC_OR (275) 58
    TK_LIT_INT (276) 19 20 21 22 27
    TK_LIT_FLOAT (277) 28
    TK_LIT_FALSE (278) 29
    TK_LIT_TRUE (279) 30
    TK_LIT_CHAR (280) 31
    TK_IDENTIFICADOR (281) 57
    TK_ERRO (282)


Nonterminals, with rules where they appear

    $accept (44)
        on left: 0
    Program (45)
        on left: 1
        on right: 0
    DecList (46)
        on left: 2 3
        on right: 1 3
    Dec (47)
        on left: 4 5
        on right: 3
    DecLocal (48)
        on left: 6
        on right: 46
    VarListLocal (49)
        on left: 7 8 9 10
        on right: 6 7 8
    Type (50)
        on left: 11 12 13 14
        on right: 4 5 6 37
    VarList (51)
        on left: 15 16 17 18
        on right: 4 15 16
    ArrayDimDec (52)
        on left: 19 20
        on right: 16 18
    ArrayDimDecEnd (53)
        on left: 21 22
        on right: 19 21
    ArrayDim (54)
        on left: 23 24
        on right: 50 80
    ArrayDimEnd (55)
        on left: 25 26
        on right: 23 25
    Lit (56)
        on left: 27 28 29 30 31
        on right: 8 10 82
    Func (57)
        on left: 32 33
        on right: 5
    ParamList (58)
        on left: 34
        on right: 32
    ParamListEnd (59)
        on left: 35 36
        on right: 34 36
    Param (60)
        on left: 37
        on right: 34 36
    Block (61)
        on left: 38 39
        on right: 32 33 43 51 52 53
    CommandList (62)
        on left: 40
        on right: 38
    CommandListEnd (63)
        on left: 41 42
        on right: 40 42
    Command (64)
        on left: 43 44 45 46 47 48
        on right: 40 42
    Atrib (65)
        on left: 49 50
        on right: 45
    Flow (66)
        on left: 51 52 53
        on right: 44
    Ret (67)
        on left: 54
        on right: 47
    FuncCall (68)
        on left: 55 56
        on right: 48 79
    ID (69)
        on left: 57
        on right: 7 8 9 10 15 16 17 18 32 33 37 49 50 55 56 80 81
    Expr (70)
        on left: 58 59
        on right: 23 24 25 26 49 50 51 52 53 54 58 78 83 85
    T (71)
        on left: 60 61
        on right: 58 59 60
    F (72)
        on left: 62 63 64
        on right: 60 61 62 63
    G (73)
        on left: 65 66 67
        on right: 62 63 64 65 66
    I (74)
        on left: 68 69 70
        on right: 65 66 67 68 69
    J (75)
        on left: 71 72 73 74
        on right: 68 69 70 71 72 73
    K (76)
        on left: 75 76 77
        on right: 71 72 73 74
    L (77)
        on left: 78 79 80 81 82
        on right: 75 76 77
    ExprList (78)
        on left: 83
        on right: 55
    ExprListEnd (79)
        on left: 84 85
        on right: 83 85


State 0

    0 $accept: . Program $end

    TK_PR_INT    shift, and go to state 1
    TK_PR_FLOAT  shift, and go to state 2
    TK_PR_BOOL   shift, and go to state 3
    TK_PR_CHAR   shift, and go to state 4

    $default  reduce using rule 2 (DecList)

    Program  go to state 5
    DecList  go to state 6
    Dec      go to state 7
    Type     go to state 8


State 1

   11 Type: TK_PR_INT .

    $default  reduce using rule 11 (Type)


State 2

   12 Type: TK_PR_FLOAT .

    $default  reduce using rule 12 (Type)


State 3

   13 Type: TK_PR_BOOL .

    $default  reduce using rule 13 (Type)


State 4

   14 Type: TK_PR_CHAR .

    $default  reduce using rule 14 (Type)


State 5

    0 $accept: Program . $end

    $end  shift, and go to state 9


State 6

    1 Program: DecList .

    $default  reduce using rule 1 (Program)


State 7

    3 DecList: Dec . DecList

    TK_PR_INT    shift, and go to state 1
    TK_PR_FLOAT  shift, and go to state 2
    TK_PR_BOOL   shift, and go to state 3
    TK_PR_CHAR   shift, and go to state 4

    $default  reduce using rule 2 (DecList)

    DecList  go to state 10
    Dec      go to state 7
    Type     go to state 8


State 8

    4 Dec: Type . VarList ';'
    5    | Type . Func

    TK_IDENTIFICADOR  shift, and go to state 11

    VarList  go to state 12
    Func     go to state 13
    ID       go to state 14


State 9

    0 $accept: Program $end .

    $default  accept


State 10

    3 DecList: Dec DecList .

    $default  reduce using rule 3 (DecList)


State 11

   57 ID: TK_IDENTIFICADOR .

    $default  reduce using rule 57 (ID)


State 12

    4 Dec: Type VarList . ';'

    ';'  shift, and go to state 15


State 13

    5 Dec: Type Func .

    $default  reduce using rule 5 (Dec)


State 14

   15 VarList: ID . ',' VarList
   16        | ID . '[' ArrayDimDec ']' ',' VarList
   17        | ID .
   18        | ID . '[' ArrayDimDec ']'
   32 Func: ID . '(' ParamList ')' Block
   33     | ID . '(' ')' Block

    ','  shift, and go to state 16
    '['  shift, and go to state 17
    '('  shift, and go to state 18

    $default  reduce using rule 17 (VarList)


State 15

    4 Dec: Type VarList ';' .

    $default  reduce using rule 4 (Dec)


State 16

   15 VarList: ID ',' . VarList

    TK_IDENTIFICADOR  shift, and go to state 11

    VarList  go to state 19
    ID       go to state 20


State 17

   16 VarList: ID '[' . ArrayDimDec ']' ',' VarList
   18        | ID '[' . ArrayDimDec ']'

    TK_LIT_INT  shift, and go to state 21

    ArrayDimDec  go to state 22


State 18

   32 Func: ID '(' . ParamList ')' Block
   33     | ID '(' . ')' Block

    TK_PR_INT    shift, and go to state 1
    TK_PR_FLOAT  shift, and go to state 2
    TK_PR_BOOL   shift, and go to state 3
    TK_PR_CHAR   shift, and go to state 4
    ')'          shift, and go to state 23

    Type       go to state 24
    ParamList  go to state 25
    Param      go to state 26


State 19

   15 VarList: ID ',' VarList .

    $default  reduce using rule 15 (VarList)


State 20

   15 VarList: ID . ',' VarList
   16        | ID . '[' ArrayDimDec ']' ',' VarList
   17        | ID .
   18        | ID . '[' ArrayDimDec ']'

    ','  shift, and go to state 16
    '['  shift, and go to state 17

    $default  reduce using rule 17 (VarList)


State 21

   19 ArrayDimDec: TK_LIT_INT . '^' ArrayDimDecEnd
   20            | TK_LIT_INT .

    '^'  shift, and go to state 27

    $default  reduce using rule 20 (ArrayDimDec)


State 22

   16 VarList: ID '[' ArrayDimDec . ']' ',' VarList
   18        | ID '[' ArrayDimDec . ']'

    ']'  shift, and go to state 28


State 23

   33 Func: ID '(' ')' . Block

    '{'  shift, and go to state 29

    Block  go to state 30


State 24

   37 Param: Type . ID

    TK_IDENTIFICADOR  shift, and go to state 11

    ID  go to state 31


State 25

   32 Func: ID '(' ParamList . ')' Block

    ')'  shift, and go to state 32


State 26

   34 ParamList: Param . ParamListEnd

    ','  shift, and go to state 33

    $default  reduce using rule 35 (ParamListEnd)

    ParamListEnd  go to state 34


State 27

   19 ArrayDimDec: TK_LIT_INT '^' . ArrayDimDecEnd

    TK_LIT_INT  shift, and go to state 35

    ArrayDimDecEnd  go to state 36


State 28

   16 VarList: ID '[' ArrayDimDec ']' . ',' VarList
   18        | ID '[' ArrayDimDec ']' .

    ','  shift, and go to state 37

    $default  reduce using rule 18 (VarList)


State 29

   38 Block: '{' . CommandList '}'
   39      | '{' . '}'

    TK_PR_INT         shift, and go to state 1
    TK_PR_FLOAT       shift, and go to state 2
    TK_PR_BOOL        shift, and go to state 3
    TK_PR_CHAR        shift, and go to state 4
    TK_PR_IF          shift, and go to state 38
    TK_PR_WHILE       shift, and go to state 39
    TK_PR_RETURN      shift, and go to state 40
    TK_IDENTIFICADOR  shift, and go to state 11
    '{'               shift, and go to state 29
    '}'               shift, and go to state 41

    DecLocal     go to state 42
    Type         go to state 43
    Block        go to state 44
    CommandList  go to state 45
    Command      go to state 46
    Atrib        go to state 47
    Flow         go to state 48
    Ret          go to state 49
    FuncCall     go to state 50
    ID           go to state 51


State 30

   33 Func: ID '(' ')' Block .

    $default  reduce using rule 33 (Func)


State 31

   37 Param: Type ID .

    $default  reduce using rule 37 (Param)


State 32

   32 Func: ID '(' ParamList ')' . Block

    '{'  shift, and go to state 29

    Block  go to state 52


State 33

   36 ParamListEnd: ',' . Param ParamListEnd

    TK_PR_INT    shift, and go to state 1
    TK_PR_FLOAT  shift, and go to state 2
    TK_PR_BOOL   shift, and go to state 3
    TK_PR_CHAR   shift, and go to state 4

    Type   go to state 24
    Param  go to state 53


State 34

   34 ParamList: Param ParamListEnd .

    $default  reduce using rule 34 (ParamList)


State 35

   21 ArrayDimDecEnd: TK_LIT_INT . '^' ArrayDimDecEnd
   22               | TK_LIT_INT .

    '^'  shift, and go to state 54

    $default  reduce using rule 22 (ArrayDimDecEnd)


State 36

   19 ArrayDimDec: TK_LIT_INT '^' ArrayDimDecEnd .

    $default  reduce using rule 19 (ArrayDimDec)


State 37

   16 VarList: ID '[' ArrayDimDec ']' ',' . VarList

    TK_IDENTIFICADOR  shift, and go to state 11

    VarList  go to state 55
    ID       go to state 20


State 38

   52 Flow: TK_PR_IF . '(' Expr ')' TK_PR_THEN Block
   53     | TK_PR_IF . '(' Expr ')' TK_PR_THEN Block TK_PR_ELSE Block

    '('  shift, and go to state 56


State 39

   51 Flow: TK_PR_WHILE . '(' Expr ')' Block

    '('  shift, and go to state 57


State 40

   54 Ret: TK_PR_RETURN . Expr

    TK_LIT_INT        shift, and go to state 58
    TK_LIT_FLOAT      shift, and go to state 59
    TK_LIT_FALSE      shift, and go to state 60
    TK_LIT_TRUE       shift, and go to state 61
    TK_LIT_CHAR       shift, and go to state 62
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 63
    '-'               shift, and go to state 64
    '!'               shift, and go to state 65

    Lit       go to state 66
    FuncCall  go to state 67
    ID        go to state 68
    Expr      go to state 69
    T         go to state 70
    F         go to state 71
    G         go to state 72
    I         go to state 73
    J         go to state 74
    K         go to state 75
    L         go to state 76


State 41

   39 Block: '{' '}' .

    $default  reduce using rule 39 (Block)


State 42

   46 Command: DecLocal .

    $default  reduce using rule 46 (Command)


State 43

    6 DecLocal: Type . VarListLocal

    TK_IDENTIFICADOR  shift, and go to state 11

    VarListLocal  go to state 77
    ID            go to state 78


State 44

   43 Command: Block .

    $default  reduce using rule 43 (Command)


State 45

   38 Block: '{' CommandList . '}'

    '}'  shift, and go to state 79


State 46

   40 CommandList: Command . CommandListEnd

    ';'  shift, and go to state 80

    CommandListEnd  go to state 81


State 47

   45 Command: Atrib .

    $default  reduce using rule 45 (Command)


State 48

   44 Command: Flow .

    $default  reduce using rule 44 (Command)


State 49

   47 Command: Ret .

    $default  reduce using rule 47 (Command)


State 50

   48 Command: FuncCall .

    $default  reduce using rule 48 (Command)


State 51

   49 Atrib: ID . '=' Expr
   50      | ID . '[' ArrayDim ']' '=' Expr
   55 FuncCall: ID . '(' ExprList ')'
   56         | ID . '(' ')'

    '['  shift, and go to state 82
    '('  shift, and go to state 83
    '='  shift, and go to state 84


State 52

   32 Func: ID '(' ParamList ')' Block .

    $default  reduce using rule 32 (Func)


State 53

   36 ParamListEnd: ',' Param . ParamListEnd

    ','  shift, and go to state 33

    $default  reduce using rule 35 (ParamListEnd)

    ParamListEnd  go to state 85


State 54

   21 ArrayDimDecEnd: TK_LIT_INT '^' . ArrayDimDecEnd

    TK_LIT_INT  shift, and go to state 35

    ArrayDimDecEnd  go to state 86


State 55

   16 VarList: ID '[' ArrayDimDec ']' ',' VarList .

    $default  reduce using rule 16 (VarList)


State 56

   52 Flow: TK_PR_IF '(' . Expr ')' TK_PR_THEN Block
   53     | TK_PR_IF '(' . Expr ')' TK_PR_THEN Block TK_PR_ELSE Block

    TK_LIT_INT        shift, and go to state 58
    TK_LIT_FLOAT      shift, and go to state 59
    TK_LIT_FALSE      shift, and go to state 60
    TK_LIT_TRUE       shift, and go to state 61
    TK_LIT_CHAR       shift, and go to state 62
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 63
    '-'               shift, and go to state 64
    '!'               shift, and go to state 65

    Lit       go to state 66
    FuncCall  go to state 67
    ID        go to state 68
    Expr      go to state 87
    T         go to state 70
    F         go to state 71
    G         go to state 72
    I         go to state 73
    J         go to state 74
    K         go to state 75
    L         go to state 76


State 57

   51 Flow: TK_PR_WHILE '(' . Expr ')' Block

    TK_LIT_INT        shift, and go to state 58
    TK_LIT_FLOAT      shift, and go to state 59
    TK_LIT_FALSE      shift, and go to state 60
    TK_LIT_TRUE       shift, and go to state 61
    TK_LIT_CHAR       shift, and go to state 62
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 63
    '-'               shift, and go to state 64
    '!'               shift, and go to state 65

    Lit       go to state 66
    FuncCall  go to state 67
    ID        go to state 68
    Expr      go to state 88
    T         go to state 70
    F         go to state 71
    G         go to state 72
    I         go to state 73
    J         go to state 74
    K         go to state 75
    L         go to state 76


State 58

   27 Lit: TK_LIT_INT .

    $default  reduce using rule 27 (Lit)


State 59

   28 Lit: TK_LIT_FLOAT .

    $default  reduce using rule 28 (Lit)


State 60

   29 Lit: TK_LIT_FALSE .

    $default  reduce using rule 29 (Lit)


State 61

   30 Lit: TK_LIT_TRUE .

    $default  reduce using rule 30 (Lit)


State 62

   31 Lit: TK_LIT_CHAR .

    $default  reduce using rule 31 (Lit)


State 63

   78 L: '(' . Expr ')'

    TK_LIT_INT        shift, and go to state 58
    TK_LIT_FLOAT      shift, and go to state 59
    TK_LIT_FALSE      shift, and go to state 60
    TK_LIT_TRUE       shift, and go to state 61
    TK_LIT_CHAR       shift, and go to state 62
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 63
    '-'               shift, and go to state 64
    '!'               shift, and go to state 65

    Lit       go to state 66
    FuncCall  go to state 67
    ID        go to state 68
    Expr      go to state 89
    T         go to state 70
    F         go to state 71
    G         go to state 72
    I         go to state 73
    J         go to state 74
    K         go to state 75
    L         go to state 76


State 64

   75 K: '-' . L

    TK_LIT_INT        shift, and go to state 58
    TK_LIT_FLOAT      shift, and go to state 59
    TK_LIT_FALSE      shift, and go to state 60
    TK_LIT_TRUE       shift, and go to state 61
    TK_LIT_CHAR       shift, and go to state 62
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 63

    Lit       go to state 66
    FuncCall  go to state 67
    ID        go to state 68
    L         go to state 90


State 65

   76 K: '!' . L

    TK_LIT_INT        shift, and go to state 58
    TK_LIT_FLOAT      shift, and go to state 59
    TK_LIT_FALSE      shift, and go to state 60
    TK_LIT_TRUE       shift, and go to state 61
    TK_LIT_CHAR       shift, and go to state 62
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 63

    Lit       go to state 66
    FuncCall  go to state 67
    ID        go to state 68
    L         go to state 91


State 66

   82 L: Lit .

    $default  reduce using rule 82 (L)


State 67

   79 L: FuncCall .

    $default  reduce using rule 79 (L)


State 68

   55 FuncCall: ID . '(' ExprList ')'
   56         | ID . '(' ')'
   80 L: ID . '[' ArrayDim ']'
   81  | ID .

    '['  shift, and go to state 92
    '('  shift, and go to state 83

    $default  reduce using rule 81 (L)


State 69

   54 Ret: TK_PR_RETURN Expr .
   58 Expr: Expr . TK_OC_OR T

    TK_OC_OR  shift, and go to state 93

    $default  reduce using rule 54 (Ret)


State 70

   59 Expr: T .
   60 T: T . TK_OC_AND F

    TK_OC_AND  shift, and go to state 94

    $default  reduce using rule 59 (Expr)


State 71

   61 T: F .
   62 F: F . TK_OC_EQ G
   63  | F . TK_OC_NE G

    TK_OC_EQ  shift, and go to state 95
    TK_OC_NE  shift, and go to state 96

    $default  reduce using rule 61 (T)


State 72

   64 F: G .
   65 G: G . TK_OC_LE I
   66  | G . TK_OC_GE I

    TK_OC_LE  shift, and go to state 97
    TK_OC_GE  shift, and go to state 98

    $default  reduce using rule 64 (F)


State 73

   67 G: I .
   68 I: I . '+' J
   69  | I . '-' J

    '+'  shift, and go to state 99
    '-'  shift, and go to state 100

    $default  reduce using rule 67 (G)


State 74

   70 I: J .
   71 J: J . '*' K
   72  | J . '/' K
   73  | J . '%' K

    '*'  shift, and go to state 101
    '/'  shift, and go to state 102
    '%'  shift, and go to state 103

    $default  reduce using rule 70 (I)


State 75

   74 J: K .

    $default  reduce using rule 74 (J)


State 76

   77 K: L .

    $default  reduce using rule 77 (K)


State 77

    6 DecLocal: Type VarListLocal .

    $default  reduce using rule 6 (DecLocal)


State 78

    7 VarListLocal: ID . ',' VarListLocal
    8             | ID . TK_OC_LE Lit ',' VarListLocal
    9             | ID .
   10             | ID . TK_OC_LE Lit

    TK_OC_LE  shift, and go to state 104
    ','       shift, and go to state 105

    $default  reduce using rule 9 (VarListLocal)


State 79

   38 Block: '{' CommandList '}' .

    $default  reduce using rule 38 (Block)


State 80

   41 CommandListEnd: ';' .
   42               | ';' . Command CommandListEnd

    TK_PR_INT         shift, and go to state 1
    TK_PR_FLOAT       shift, and go to state 2
    TK_PR_BOOL        shift, and go to state 3
    TK_PR_CHAR        shift, and go to state 4
    TK_PR_IF          shift, and go to state 38
    TK_PR_WHILE       shift, and go to state 39
    TK_PR_RETURN      shift, and go to state 40
    TK_IDENTIFICADOR  shift, and go to state 11
    '{'               shift, and go to state 29

    $default  reduce using rule 41 (CommandListEnd)

    DecLocal  go to state 42
    Type      go to state 43
    Block     go to state 44
    Command   go to state 106
    Atrib     go to state 47
    Flow      go to state 48
    Ret       go to state 49
    FuncCall  go to state 50
    ID        go to state 51


State 81

   40 CommandList: Command CommandListEnd .

    $default  reduce using rule 40 (CommandList)


State 82

   50 Atrib: ID '[' . ArrayDim ']' '=' Expr

    TK_LIT_INT        shift, and go to state 58
    TK_LIT_FLOAT      shift, and go to state 59
    TK_LIT_FALSE      shift, and go to state 60
    TK_LIT_TRUE       shift, and go to state 61
    TK_LIT_CHAR       shift, and go to state 62
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 63
    '-'               shift, and go to state 64
    '!'               shift, and go to state 65

    ArrayDim  go to state 107
    Lit       go to state 66
    FuncCall  go to state 67
    ID        go to state 68
    Expr      go to state 108
    T         go to state 70
    F         go to state 71
    G         go to state 72
    I         go to state 73
    J         go to state 74
    K         go to state 75
    L         go to state 76


State 83

   55 FuncCall: ID '(' . ExprList ')'
   56         | ID '(' . ')'

    TK_LIT_INT        shift, and go to state 58
    TK_LIT_FLOAT      shift, and go to state 59
    TK_LIT_FALSE      shift, and go to state 60
    TK_LIT_TRUE       shift, and go to state 61
    TK_LIT_CHAR       shift, and go to state 62
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 63
    ')'               shift, and go to state 109
    '-'               shift, and go to state 64
    '!'               shift, and go to state 65

    Lit       go to state 66
    FuncCall  go to state 67
    ID        go to state 68
    Expr      go to state 110
    T         go to state 70
    F         go to state 71
    G         go to state 72
    I         go to state 73
    J         go to state 74
    K         go to state 75
    L         go to state 76
    ExprList  go to state 111


State 84

   49 Atrib: ID '=' . Expr

    TK_LIT_INT        shift, and go to state 58
    TK_LIT_FLOAT      shift, and go to state 59
    TK_LIT_FALSE      shift, and go to state 60
    TK_LIT_TRUE       shift, and go to state 61
    TK_LIT_CHAR       shift, and go to state 62
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 63
    '-'               shift, and go to state 64
    '!'               shift, and go to state 65

    Lit       go to state 66
    FuncCall  go to state 67
    ID        go to state 68
    Expr      go to state 112
    T         go to state 70
    F         go to state 71
    G         go to state 72
    I         go to state 73
    J         go to state 74
    K         go to state 75
    L         go to state 76


State 85

   36 ParamListEnd: ',' Param ParamListEnd .

    $default  reduce using rule 36 (ParamListEnd)


State 86

   21 ArrayDimDecEnd: TK_LIT_INT '^' ArrayDimDecEnd .

    $default  reduce using rule 21 (ArrayDimDecEnd)


State 87

   52 Flow: TK_PR_IF '(' Expr . ')' TK_PR_THEN Block
   53     | TK_PR_IF '(' Expr . ')' TK_PR_THEN Block TK_PR_ELSE Block
   58 Expr: Expr . TK_OC_OR T

    TK_OC_OR  shift, and go to state 93
    ')'       shift, and go to state 113


State 88

   51 Flow: TK_PR_WHILE '(' Expr . ')' Block
   58 Expr: Expr . TK_OC_OR T

    TK_OC_OR  shift, and go to state 93
    ')'       shift, and go to state 114


State 89

   58 Expr: Expr . TK_OC_OR T
   78 L: '(' Expr . ')'

    TK_OC_OR  shift, and go to state 93
    ')'       shift, and go to state 115


State 90

   75 K: '-' L .

    $default  reduce using rule 75 (K)


State 91

   76 K: '!' L .

    $default  reduce using rule 76 (K)


State 92

   80 L: ID '[' . ArrayDim ']'

    TK_LIT_INT        shift, and go to state 58
    TK_LIT_FLOAT      shift, and go to state 59
    TK_LIT_FALSE      shift, and go to state 60
    TK_LIT_TRUE       shift, and go to state 61
    TK_LIT_CHAR       shift, and go to state 62
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 63
    '-'               shift, and go to state 64
    '!'               shift, and go to state 65

    ArrayDim  go to state 116
    Lit       go to state 66
    FuncCall  go to state 67
    ID        go to state 68
    Expr      go to state 108
    T         go to state 70
    F         go to state 71
    G         go to state 72
    I         go to state 73
    J         go to state 74
    K         go to state 75
    L         go to state 76


State 93

   58 Expr: Expr TK_OC_OR . T

    TK_LIT_INT        shift, and go to state 58
    TK_LIT_FLOAT      shift, and go to state 59
    TK_LIT_FALSE      shift, and go to state 60
    TK_LIT_TRUE       shift, and go to state 61
    TK_LIT_CHAR       shift, and go to state 62
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 63
    '-'               shift, and go to state 64
    '!'               shift, and go to state 65

    Lit       go to state 66
    FuncCall  go to state 67
    ID        go to state 68
    T         go to state 117
    F         go to state 71
    G         go to state 72
    I         go to state 73
    J         go to state 74
    K         go to state 75
    L         go to state 76


State 94

   60 T: T TK_OC_AND . F

    TK_LIT_INT        shift, and go to state 58
    TK_LIT_FLOAT      shift, and go to state 59
    TK_LIT_FALSE      shift, and go to state 60
    TK_LIT_TRUE       shift, and go to state 61
    TK_LIT_CHAR       shift, and go to state 62
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 63
    '-'               shift, and go to state 64
    '!'               shift, and go to state 65

    Lit       go to state 66
    FuncCall  go to state 67
    ID        go to state 68
    F         go to state 118
    G         go to state 72
    I         go to state 73
    J         go to state 74
    K         go to state 75
    L         go to state 76


State 95

   62 F: F TK_OC_EQ . G

    TK_LIT_INT        shift, and go to state 58
    TK_LIT_FLOAT      shift, and go to state 59
    TK_LIT_FALSE      shift, and go to state 60
    TK_LIT_TRUE       shift, and go to state 61
    TK_LIT_CHAR       shift, and go to state 62
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 63
    '-'               shift, and go to state 64
    '!'               shift, and go to state 65

    Lit       go to state 66
    FuncCall  go to state 67
    ID        go to state 68
    G         go to state 119
    I         go to state 73
    J         go to state 74
    K         go to state 75
    L         go to state 76


State 96

   63 F: F TK_OC_NE . G

    TK_LIT_INT        shift, and go to state 58
    TK_LIT_FLOAT      shift, and go to state 59
    TK_LIT_FALSE      shift, and go to state 60
    TK_LIT_TRUE       shift, and go to state 61
    TK_LIT_CHAR       shift, and go to state 62
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 63
    '-'               shift, and go to state 64
    '!'               shift, and go to state 65

    Lit       go to state 66
    FuncCall  go to state 67
    ID        go to state 68
    G         go to state 120
    I         go to state 73
    J         go to state 74
    K         go to state 75
    L         go to state 76


State 97

   65 G: G TK_OC_LE . I

    TK_LIT_INT        shift, and go to state 58
    TK_LIT_FLOAT      shift, and go to state 59
    TK_LIT_FALSE      shift, and go to state 60
    TK_LIT_TRUE       shift, and go to state 61
    TK_LIT_CHAR       shift, and go to state 62
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 63
    '-'               shift, and go to state 64
    '!'               shift, and go to state 65

    Lit       go to state 66
    FuncCall  go to state 67
    ID        go to state 68
    I         go to state 121
    J         go to state 74
    K         go to state 75
    L         go to state 76


State 98

   66 G: G TK_OC_GE . I

    TK_LIT_INT        shift, and go to state 58
    TK_LIT_FLOAT      shift, and go to state 59
    TK_LIT_FALSE      shift, and go to state 60
    TK_LIT_TRUE       shift, and go to state 61
    TK_LIT_CHAR       shift, and go to state 62
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 63
    '-'               shift, and go to state 64
    '!'               shift, and go to state 65

    Lit       go to state 66
    FuncCall  go to state 67
    ID        go to state 68
    I         go to state 122
    J         go to state 74
    K         go to state 75
    L         go to state 76


State 99

   68 I: I '+' . J

    TK_LIT_INT        shift, and go to state 58
    TK_LIT_FLOAT      shift, and go to state 59
    TK_LIT_FALSE      shift, and go to state 60
    TK_LIT_TRUE       shift, and go to state 61
    TK_LIT_CHAR       shift, and go to state 62
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 63
    '-'               shift, and go to state 64
    '!'               shift, and go to state 65

    Lit       go to state 66
    FuncCall  go to state 67
    ID        go to state 68
    J         go to state 123
    K         go to state 75
    L         go to state 76


State 100

   69 I: I '-' . J

    TK_LIT_INT        shift, and go to state 58
    TK_LIT_FLOAT      shift, and go to state 59
    TK_LIT_FALSE      shift, and go to state 60
    TK_LIT_TRUE       shift, and go to state 61
    TK_LIT_CHAR       shift, and go to state 62
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 63
    '-'               shift, and go to state 64
    '!'               shift, and go to state 65

    Lit       go to state 66
    FuncCall  go to state 67
    ID        go to state 68
    J         go to state 124
    K         go to state 75
    L         go to state 76


State 101

   71 J: J '*' . K

    TK_LIT_INT        shift, and go to state 58
    TK_LIT_FLOAT      shift, and go to state 59
    TK_LIT_FALSE      shift, and go to state 60
    TK_LIT_TRUE       shift, and go to state 61
    TK_LIT_CHAR       shift, and go to state 62
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 63
    '-'               shift, and go to state 64
    '!'               shift, and go to state 65

    Lit       go to state 66
    FuncCall  go to state 67
    ID        go to state 68
    K         go to state 125
    L         go to state 76


State 102

   72 J: J '/' . K

    TK_LIT_INT        shift, and go to state 58
    TK_LIT_FLOAT      shift, and go to state 59
    TK_LIT_FALSE      shift, and go to state 60
    TK_LIT_TRUE       shift, and go to state 61
    TK_LIT_CHAR       shift, and go to state 62
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 63
    '-'               shift, and go to state 64
    '!'               shift, and go to state 65

    Lit       go to state 66
    FuncCall  go to state 67
    ID        go to state 68
    K         go to state 126
    L         go to state 76


State 103

   73 J: J '%' . K

    TK_LIT_INT        shift, and go to state 58
    TK_LIT_FLOAT      shift, and go to state 59
    TK_LIT_FALSE      shift, and go to state 60
    TK_LIT_TRUE       shift, and go to state 61
    TK_LIT_CHAR       shift, and go to state 62
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 63
    '-'               shift, and go to state 64
    '!'               shift, and go to state 65

    Lit       go to state 66
    FuncCall  go to state 67
    ID        go to state 68
    K         go to state 127
    L         go to state 76


State 104

    8 VarListLocal: ID TK_OC_LE . Lit ',' VarListLocal
   10             | ID TK_OC_LE . Lit

    TK_LIT_INT    shift, and go to state 58
    TK_LIT_FLOAT  shift, and go to state 59
    TK_LIT_FALSE  shift, and go to state 60
    TK_LIT_TRUE   shift, and go to state 61
    TK_LIT_CHAR   shift, and go to state 62

    Lit  go to state 128


State 105

    7 VarListLocal: ID ',' . VarListLocal

    TK_IDENTIFICADOR  shift, and go to state 11

    VarListLocal  go to state 129
    ID            go to state 78


State 106

   42 CommandListEnd: ';' Command . CommandListEnd

    ';'  shift, and go to state 80

    CommandListEnd  go to state 130


State 107

   50 Atrib: ID '[' ArrayDim . ']' '=' Expr

    ']'  shift, and go to state 131


State 108

   23 ArrayDim: Expr . '^' ArrayDimEnd
   24         | Expr .
   58 Expr: Expr . TK_OC_OR T

    TK_OC_OR  shift, and go to state 93
    '^'       shift, and go to state 132

    $default  reduce using rule 24 (ArrayDim)


State 109

   56 FuncCall: ID '(' ')' .

    $default  reduce using rule 56 (FuncCall)


State 110

   58 Expr: Expr . TK_OC_OR T
   83 ExprList: Expr . ExprListEnd

    TK_OC_OR  shift, and go to state 93
    ','       shift, and go to state 133

    $default  reduce using rule 84 (ExprListEnd)

    ExprListEnd  go to state 134


State 111

   55 FuncCall: ID '(' ExprList . ')'

    ')'  shift, and go to state 135


State 112

   49 Atrib: ID '=' Expr .
   58 Expr: Expr . TK_OC_OR T

    TK_OC_OR  shift, and go to state 93

    $default  reduce using rule 49 (Atrib)


State 113

   52 Flow: TK_PR_IF '(' Expr ')' . TK_PR_THEN Block
   53     | TK_PR_IF '(' Expr ')' . TK_PR_THEN Block TK_PR_ELSE Block

    TK_PR_THEN  shift, and go to state 136


State 114

   51 Flow: TK_PR_WHILE '(' Expr ')' . Block

    '{'  shift, and go to state 29

    Block  go to state 137


State 115

   78 L: '(' Expr ')' .

    $default  reduce using rule 78 (L)


State 116

   80 L: ID '[' ArrayDim . ']'

    ']'  shift, and go to state 138


State 117

   58 Expr: Expr TK_OC_OR T .
   60 T: T . TK_OC_AND F

    TK_OC_AND  shift, and go to state 94

    $default  reduce using rule 58 (Expr)


State 118

   60 T: T TK_OC_AND F .
   62 F: F . TK_OC_EQ G
   63  | F . TK_OC_NE G

    TK_OC_EQ  shift, and go to state 95
    TK_OC_NE  shift, and go to state 96

    $default  reduce using rule 60 (T)


State 119

   62 F: F TK_OC_EQ G .
   65 G: G . TK_OC_LE I
   66  | G . TK_OC_GE I

    TK_OC_LE  shift, and go to state 97
    TK_OC_GE  shift, and go to state 98

    $default  reduce using rule 62 (F)


State 120

   63 F: F TK_OC_NE G .
   65 G: G . TK_OC_LE I
   66  | G . TK_OC_GE I

    TK_OC_LE  shift, and go to state 97
    TK_OC_GE  shift, and go to state 98

    $default  reduce using rule 63 (F)


State 121

   65 G: G TK_OC_LE I .
   68 I: I . '+' J
   69  | I . '-' J

    '+'  shift, and go to state 99
    '-'  shift, and go to state 100

    $default  reduce using rule 65 (G)


State 122

   66 G: G TK_OC_GE I .
   68 I: I . '+' J
   69  | I . '-' J

    '+'  shift, and go to state 99
    '-'  shift, and go to state 100

    $default  reduce using rule 66 (G)


State 123

   68 I: I '+' J .
   71 J: J . '*' K
   72  | J . '/' K
   73  | J . '%' K

    '*'  shift, and go to state 101
    '/'  shift, and go to state 102
    '%'  shift, and go to state 103

    $default  reduce using rule 68 (I)


State 124

   69 I: I '-' J .
   71 J: J . '*' K
   72  | J . '/' K
   73  | J . '%' K

    '*'  shift, and go to state 101
    '/'  shift, and go to state 102
    '%'  shift, and go to state 103

    $default  reduce using rule 69 (I)


State 125

   71 J: J '*' K .

    $default  reduce using rule 71 (J)


State 126

   72 J: J '/' K .

    $default  reduce using rule 72 (J)


State 127

   73 J: J '%' K .

    $default  reduce using rule 73 (J)


State 128

    8 VarListLocal: ID TK_OC_LE Lit . ',' VarListLocal
   10             | ID TK_OC_LE Lit .

    ','  shift, and go to state 139

    $default  reduce using rule 10 (VarListLocal)


State 129

    7 VarListLocal: ID ',' VarListLocal .

    $default  reduce using rule 7 (VarListLocal)


State 130

   42 CommandListEnd: ';' Command CommandListEnd .

    $default  reduce using rule 42 (CommandListEnd)


State 131

   50 Atrib: ID '[' ArrayDim ']' . '=' Expr

    '='  shift, and go to state 140


State 132

   23 ArrayDim: Expr '^' . ArrayDimEnd

    TK_LIT_INT        shift, and go to state 58
    TK_LIT_FLOAT      shift, and go to state 59
    TK_LIT_FALSE      shift, and go to state 60
    TK_LIT_TRUE       shift, and go to state 61
    TK_LIT_CHAR       shift, and go to state 62
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 63
    '-'               shift, and go to state 64
    '!'               shift, and go to state 65

    ArrayDimEnd  go to state 141
    Lit          go to state 66
    FuncCall     go to state 67
    ID           go to state 68
    Expr         go to state 142
    T            go to state 70
    F            go to state 71
    G            go to state 72
    I            go to state 73
    J            go to state 74
    K            go to state 75
    L            go to state 76


State 133

   85 ExprListEnd: ',' . Expr ExprListEnd

    TK_LIT_INT        shift, and go to state 58
    TK_LIT_FLOAT      shift, and go to state 59
    TK_LIT_FALSE      shift, and go to state 60
    TK_LIT_TRUE       shift, and go to state 61
    TK_LIT_CHAR       shift, and go to state 62
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 63
    '-'               shift, and go to state 64
    '!'               shift, and go to state 65

    Lit       go to state 66
    FuncCall  go to state 67
    ID        go to state 68
    Expr      go to state 143
    T         go to state 70
    F         go to state 71
    G         go to state 72
    I         go to state 73
    J         go to state 74
    K         go to state 75
    L         go to state 76


State 134

   83 ExprList: Expr ExprListEnd .

    $default  reduce using rule 83 (ExprList)


State 135

   55 FuncCall: ID '(' ExprList ')' .

    $default  reduce using rule 55 (FuncCall)


State 136

   52 Flow: TK_PR_IF '(' Expr ')' TK_PR_THEN . Block
   53     | TK_PR_IF '(' Expr ')' TK_PR_THEN . Block TK_PR_ELSE Block

    '{'  shift, and go to state 29

    Block  go to state 144


State 137

   51 Flow: TK_PR_WHILE '(' Expr ')' Block .

    $default  reduce using rule 51 (Flow)


State 138

   80 L: ID '[' ArrayDim ']' .

    $default  reduce using rule 80 (L)


State 139

    8 VarListLocal: ID TK_OC_LE Lit ',' . VarListLocal

    TK_IDENTIFICADOR  shift, and go to state 11

    VarListLocal  go to state 145
    ID            go to state 78


State 140

   50 Atrib: ID '[' ArrayDim ']' '=' . Expr

    TK_LIT_INT        shift, and go to state 58
    TK_LIT_FLOAT      shift, and go to state 59
    TK_LIT_FALSE      shift, and go to state 60
    TK_LIT_TRUE       shift, and go to state 61
    TK_LIT_CHAR       shift, and go to state 62
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 63
    '-'               shift, and go to state 64
    '!'               shift, and go to state 65

    Lit       go to state 66
    FuncCall  go to state 67
    ID        go to state 68
    Expr      go to state 146
    T         go to state 70
    F         go to state 71
    G         go to state 72
    I         go to state 73
    J         go to state 74
    K         go to state 75
    L         go to state 76


State 141

   23 ArrayDim: Expr '^' ArrayDimEnd .

    $default  reduce using rule 23 (ArrayDim)


State 142

   25 ArrayDimEnd: Expr . '^' ArrayDimEnd
   26            | Expr .
   58 Expr: Expr . TK_OC_OR T

    TK_OC_OR  shift, and go to state 93
    '^'       shift, and go to state 147

    $default  reduce using rule 26 (ArrayDimEnd)


State 143

   58 Expr: Expr . TK_OC_OR T
   85 ExprListEnd: ',' Expr . ExprListEnd

    TK_OC_OR  shift, and go to state 93
    ','       shift, and go to state 133

    $default  reduce using rule 84 (ExprListEnd)

    ExprListEnd  go to state 148


State 144

   52 Flow: TK_PR_IF '(' Expr ')' TK_PR_THEN Block .
   53     | TK_PR_IF '(' Expr ')' TK_PR_THEN Block . TK_PR_ELSE Block

    TK_PR_ELSE  shift, and go to state 149

    $default  reduce using rule 52 (Flow)


State 145

    8 VarListLocal: ID TK_OC_LE Lit ',' VarListLocal .

    $default  reduce using rule 8 (VarListLocal)


State 146

   50 Atrib: ID '[' ArrayDim ']' '=' Expr .
   58 Expr: Expr . TK_OC_OR T

    TK_OC_OR  shift, and go to state 93

    $default  reduce using rule 50 (Atrib)


State 147

   25 ArrayDimEnd: Expr '^' . ArrayDimEnd

    TK_LIT_INT        shift, and go to state 58
    TK_LIT_FLOAT      shift, and go to state 59
    TK_LIT_FALSE      shift, and go to state 60
    TK_LIT_TRUE       shift, and go to state 61
    TK_LIT_CHAR       shift, and go to state 62
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 63
    '-'               shift, and go to state 64
    '!'               shift, and go to state 65

    ArrayDimEnd  go to state 150
    Lit          go to state 66
    FuncCall     go to state 67
    ID           go to state 68
    Expr         go to state 142
    T            go to state 70
    F            go to state 71
    G            go to state 72
    I            go to state 73
    J            go to state 74
    K            go to state 75
    L            go to state 76


State 148

   85 ExprListEnd: ',' Expr ExprListEnd .

    $default  reduce using rule 85 (ExprListEnd)


State 149

   53 Flow: TK_PR_IF '(' Expr ')' TK_PR_THEN Block TK_PR_ELSE . Block

    '{'  shift, and go to state 29

    Block  go to state 151


State 150

   25 ArrayDimEnd: Expr '^' ArrayDimEnd .

    $default  reduce using rule 25 (ArrayDimEnd)


State 151

   53 Flow: TK_PR_IF '(' Expr ')' TK_PR_THEN Block TK_PR_ELSE Block .

    $default  reduce using rule 53 (Flow)
