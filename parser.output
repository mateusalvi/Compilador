Terminals unused in grammar

    TK_PR_INPUT
    TK_PR_OUTPUT
    TK_PR_FOR
    TK_ERRO


State 22 conflicts: 1 reduce/reduce
State 49 conflicts: 2 reduce/reduce
State 50 conflicts: 2 reduce/reduce


Grammar

    0 $accept: Program $end

    1 Program: DecList

    2 DecList: %empty
    3        | Dec DecList

    4 Dec: Type VarList ';'
    5    | Type ID '[' ArrayDim ']' ';'
    6    | Type Atrib ';'
    7    | Type Func

    8 Type: TK_PR_INT
    9     | TK_PR_FLOAT
   10     | TK_PR_BOOL
   11     | TK_PR_CHAR

   12 VarList: ID ',' VarList
   13        | ID

   14 Lit: TK_LIT_INT
   15    | TK_LIT_FLOAT
   16    | TK_LIT_FALSE
   17    | TK_LIT_TRUE
   18    | TK_LIT_CHAR

   19 ArrayDim: TK_LIT_INT ArrayDimEnd

   20 ArrayDimEnd: %empty
   21            | '^' TK_LIT_INT ArrayDimEnd

   22 Func: ID '(' ParamList ')' Block

   23 ParamList: %empty
   24          | Param ParamListEnd

   25 ParamListEnd: %empty
   26             | ',' Param ParamListEnd

   27 Param: Type ID

   28 Block: '{' CommandList '}'

   29 CommandList: Command CommandListEnd

   30 CommandListEnd: %empty
   31               | ';' Command CommandListEnd

   32 Command: %empty
   33        | Flow
   34        | Atrib
   35        | Dec
   36        | Ret
   37        | FuncCall

   38 Atrib: ID '=' Expr
   39      | ID '=' ID
   40      | ID '=' Lit
   41      | ID '[' ExprList ']' '=' Expr

   42 Flow: TK_PR_WHILE '(' Expr ')' Block
   43     | TK_PR_IF '(' Expr ')' TK_PR_THEN Block
   44     | TK_PR_IF '(' Expr ')' TK_PR_THEN Block TK_PR_ELSE Block

   45 Ret: TK_PR_RETURN Expr

   46 FuncCall: ID '(' ExprList ')'

   47 ID: TK_IDENTIFICADOR

   48 Expr: Expr TK_OC_OR T
   49     | T

   50 T: T TK_OC_AND F
   51  | F

   52 F: F TK_OC_EQ G
   53  | F TK_OC_NE G
   54  | G

   55 G: G TK_OC_LE I
   56  | G TK_OC_GE I
   57  | I

   58 I: I '+' J
   59  | I '-' J
   60  | J

   61 J: J '*' K
   62  | J '/' K
   63  | J '%' K
   64  | K

   65 K: '-' L
   66  | '!' L
   67  | L

   68 L: '(' Expr ')'
   69  | FuncCall
   70  | Lit
   71  | ID '[' ArrayDim ']'
   72  | ID

   73 ExprList: Expr ExprListEnd

   74 ExprListEnd: %empty
   75            | ',' Expr ExprListEnd


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 66
    '%' (37) 63
    '(' (40) 22 42 43 44 46 68
    ')' (41) 22 42 43 44 46 68
    '*' (42) 61
    '+' (43) 58
    ',' (44) 12 26 75
    '-' (45) 59 65
    '/' (47) 62
    ';' (59) 4 5 6 31
    '=' (61) 38 39 40 41
    '[' (91) 5 41 71
    ']' (93) 5 41 71
    '^' (94) 21
    '{' (123) 28
    '}' (125) 28
    error (256)
    TK_PR_INT (258) 8
    TK_PR_FLOAT (259) 9
    TK_PR_BOOL (260) 10
    TK_PR_CHAR (261) 11
    TK_PR_IF (262) 43 44
    TK_PR_THEN (263) 43 44
    TK_PR_ELSE (264) 44
    TK_PR_WHILE (265) 42
    TK_PR_INPUT (266)
    TK_PR_OUTPUT (267)
    TK_PR_RETURN (268) 45
    TK_PR_FOR (269)
    TK_OC_LE (270) 55
    TK_OC_GE (271) 56
    TK_OC_EQ (272) 52
    TK_OC_NE (273) 53
    TK_OC_AND (274) 50
    TK_OC_OR (275) 48
    TK_LIT_INT (276) 14 19 21
    TK_LIT_FLOAT (277) 15
    TK_LIT_FALSE (278) 16
    TK_LIT_TRUE (279) 17
    TK_LIT_CHAR (280) 18
    TK_IDENTIFICADOR (281) 47
    TK_ERRO (282)


Nonterminals, with rules where they appear

    $accept (44)
        on left: 0
    Program (45)
        on left: 1
        on right: 0
    DecList (46)
        on left: 2 3
        on right: 1 3
    Dec (47)
        on left: 4 5 6 7
        on right: 3 35
    Type (48)
        on left: 8 9 10 11
        on right: 4 5 6 7 27
    VarList (49)
        on left: 12 13
        on right: 4 12
    Lit (50)
        on left: 14 15 16 17 18
        on right: 40 70
    ArrayDim (51)
        on left: 19
        on right: 5 71
    ArrayDimEnd (52)
        on left: 20 21
        on right: 19 21
    Func (53)
        on left: 22
        on right: 7
    ParamList (54)
        on left: 23 24
        on right: 22
    ParamListEnd (55)
        on left: 25 26
        on right: 24 26
    Param (56)
        on left: 27
        on right: 24 26
    Block (57)
        on left: 28
        on right: 22 42 43 44
    CommandList (58)
        on left: 29
        on right: 28
    CommandListEnd (59)
        on left: 30 31
        on right: 29 31
    Command (60)
        on left: 32 33 34 35 36 37
        on right: 29 31
    Atrib (61)
        on left: 38 39 40 41
        on right: 6 34
    Flow (62)
        on left: 42 43 44
        on right: 33
    Ret (63)
        on left: 45
        on right: 36
    FuncCall (64)
        on left: 46
        on right: 37 69
    ID (65)
        on left: 47
        on right: 5 12 13 22 27 38 39 40 41 46 71 72
    Expr (66)
        on left: 48 49
        on right: 38 41 42 43 44 45 48 68 73 75
    T (67)
        on left: 50 51
        on right: 48 49 50
    F (68)
        on left: 52 53 54
        on right: 50 51 52 53
    G (69)
        on left: 55 56 57
        on right: 52 53 54 55 56
    I (70)
        on left: 58 59 60
        on right: 55 56 57 58 59
    J (71)
        on left: 61 62 63 64
        on right: 58 59 60 61 62 63
    K (72)
        on left: 65 66 67
        on right: 61 62 63 64
    L (73)
        on left: 68 69 70 71 72
        on right: 65 66 67
    ExprList (74)
        on left: 73
        on right: 41 46
    ExprListEnd (75)
        on left: 74 75
        on right: 73 75


State 0

    0 $accept: . Program $end

    TK_PR_INT    shift, and go to state 1
    TK_PR_FLOAT  shift, and go to state 2
    TK_PR_BOOL   shift, and go to state 3
    TK_PR_CHAR   shift, and go to state 4

    $default  reduce using rule 2 (DecList)

    Program  go to state 5
    DecList  go to state 6
    Dec      go to state 7
    Type     go to state 8


State 1

    8 Type: TK_PR_INT .

    $default  reduce using rule 8 (Type)


State 2

    9 Type: TK_PR_FLOAT .

    $default  reduce using rule 9 (Type)


State 3

   10 Type: TK_PR_BOOL .

    $default  reduce using rule 10 (Type)


State 4

   11 Type: TK_PR_CHAR .

    $default  reduce using rule 11 (Type)


State 5

    0 $accept: Program . $end

    $end  shift, and go to state 9


State 6

    1 Program: DecList .

    $default  reduce using rule 1 (Program)


State 7

    3 DecList: Dec . DecList

    TK_PR_INT    shift, and go to state 1
    TK_PR_FLOAT  shift, and go to state 2
    TK_PR_BOOL   shift, and go to state 3
    TK_PR_CHAR   shift, and go to state 4

    $default  reduce using rule 2 (DecList)

    DecList  go to state 10
    Dec      go to state 7
    Type     go to state 8


State 8

    4 Dec: Type . VarList ';'
    5    | Type . ID '[' ArrayDim ']' ';'
    6    | Type . Atrib ';'
    7    | Type . Func

    TK_IDENTIFICADOR  shift, and go to state 11

    VarList  go to state 12
    Func     go to state 13
    Atrib    go to state 14
    ID       go to state 15


State 9

    0 $accept: Program $end .

    $default  accept


State 10

    3 DecList: Dec DecList .

    $default  reduce using rule 3 (DecList)


State 11

   47 ID: TK_IDENTIFICADOR .

    $default  reduce using rule 47 (ID)


State 12

    4 Dec: Type VarList . ';'

    ';'  shift, and go to state 16


State 13

    7 Dec: Type Func .

    $default  reduce using rule 7 (Dec)


State 14

    6 Dec: Type Atrib . ';'

    ';'  shift, and go to state 17


State 15

    5 Dec: Type ID . '[' ArrayDim ']' ';'
   12 VarList: ID . ',' VarList
   13        | ID .
   22 Func: ID . '(' ParamList ')' Block
   38 Atrib: ID . '=' Expr
   39      | ID . '=' ID
   40      | ID . '=' Lit
   41      | ID . '[' ExprList ']' '=' Expr

    '['  shift, and go to state 18
    ','  shift, and go to state 19
    '('  shift, and go to state 20
    '='  shift, and go to state 21

    $default  reduce using rule 13 (VarList)


State 16

    4 Dec: Type VarList ';' .

    $default  reduce using rule 4 (Dec)


State 17

    6 Dec: Type Atrib ';' .

    $default  reduce using rule 6 (Dec)


State 18

    5 Dec: Type ID '[' . ArrayDim ']' ';'
   41 Atrib: ID '[' . ExprList ']' '=' Expr

    TK_LIT_INT        shift, and go to state 22
    TK_LIT_FLOAT      shift, and go to state 23
    TK_LIT_FALSE      shift, and go to state 24
    TK_LIT_TRUE       shift, and go to state 25
    TK_LIT_CHAR       shift, and go to state 26
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 27
    '-'               shift, and go to state 28
    '!'               shift, and go to state 29

    Lit       go to state 30
    ArrayDim  go to state 31
    FuncCall  go to state 32
    ID        go to state 33
    Expr      go to state 34
    T         go to state 35
    F         go to state 36
    G         go to state 37
    I         go to state 38
    J         go to state 39
    K         go to state 40
    L         go to state 41
    ExprList  go to state 42


State 19

   12 VarList: ID ',' . VarList

    TK_IDENTIFICADOR  shift, and go to state 11

    VarList  go to state 43
    ID       go to state 44


State 20

   22 Func: ID '(' . ParamList ')' Block

    TK_PR_INT    shift, and go to state 1
    TK_PR_FLOAT  shift, and go to state 2
    TK_PR_BOOL   shift, and go to state 3
    TK_PR_CHAR   shift, and go to state 4

    $default  reduce using rule 23 (ParamList)

    Type       go to state 45
    ParamList  go to state 46
    Param      go to state 47


State 21

   38 Atrib: ID '=' . Expr
   39      | ID '=' . ID
   40      | ID '=' . Lit

    TK_LIT_INT        shift, and go to state 48
    TK_LIT_FLOAT      shift, and go to state 23
    TK_LIT_FALSE      shift, and go to state 24
    TK_LIT_TRUE       shift, and go to state 25
    TK_LIT_CHAR       shift, and go to state 26
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 27
    '-'               shift, and go to state 28
    '!'               shift, and go to state 29

    Lit       go to state 49
    FuncCall  go to state 32
    ID        go to state 50
    Expr      go to state 51
    T         go to state 35
    F         go to state 36
    G         go to state 37
    I         go to state 38
    J         go to state 39
    K         go to state 40
    L         go to state 41


State 22

   14 Lit: TK_LIT_INT .
   19 ArrayDim: TK_LIT_INT . ArrayDimEnd

    '^'  shift, and go to state 52

    ']'       reduce using rule 14 (Lit)
    ']'       [reduce using rule 20 (ArrayDimEnd)]
    $default  reduce using rule 14 (Lit)

    ArrayDimEnd  go to state 53


State 23

   15 Lit: TK_LIT_FLOAT .

    $default  reduce using rule 15 (Lit)


State 24

   16 Lit: TK_LIT_FALSE .

    $default  reduce using rule 16 (Lit)


State 25

   17 Lit: TK_LIT_TRUE .

    $default  reduce using rule 17 (Lit)


State 26

   18 Lit: TK_LIT_CHAR .

    $default  reduce using rule 18 (Lit)


State 27

   68 L: '(' . Expr ')'

    TK_LIT_INT        shift, and go to state 48
    TK_LIT_FLOAT      shift, and go to state 23
    TK_LIT_FALSE      shift, and go to state 24
    TK_LIT_TRUE       shift, and go to state 25
    TK_LIT_CHAR       shift, and go to state 26
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 27
    '-'               shift, and go to state 28
    '!'               shift, and go to state 29

    Lit       go to state 30
    FuncCall  go to state 32
    ID        go to state 33
    Expr      go to state 54
    T         go to state 35
    F         go to state 36
    G         go to state 37
    I         go to state 38
    J         go to state 39
    K         go to state 40
    L         go to state 41


State 28

   65 K: '-' . L

    TK_LIT_INT        shift, and go to state 48
    TK_LIT_FLOAT      shift, and go to state 23
    TK_LIT_FALSE      shift, and go to state 24
    TK_LIT_TRUE       shift, and go to state 25
    TK_LIT_CHAR       shift, and go to state 26
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 27

    Lit       go to state 30
    FuncCall  go to state 32
    ID        go to state 33
    L         go to state 55


State 29

   66 K: '!' . L

    TK_LIT_INT        shift, and go to state 48
    TK_LIT_FLOAT      shift, and go to state 23
    TK_LIT_FALSE      shift, and go to state 24
    TK_LIT_TRUE       shift, and go to state 25
    TK_LIT_CHAR       shift, and go to state 26
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 27

    Lit       go to state 30
    FuncCall  go to state 32
    ID        go to state 33
    L         go to state 56


State 30

   70 L: Lit .

    $default  reduce using rule 70 (L)


State 31

    5 Dec: Type ID '[' ArrayDim . ']' ';'

    ']'  shift, and go to state 57


State 32

   69 L: FuncCall .

    $default  reduce using rule 69 (L)


State 33

   46 FuncCall: ID . '(' ExprList ')'
   71 L: ID . '[' ArrayDim ']'
   72  | ID .

    '['  shift, and go to state 58
    '('  shift, and go to state 59

    $default  reduce using rule 72 (L)


State 34

   48 Expr: Expr . TK_OC_OR T
   73 ExprList: Expr . ExprListEnd

    TK_OC_OR  shift, and go to state 60
    ','       shift, and go to state 61

    $default  reduce using rule 74 (ExprListEnd)

    ExprListEnd  go to state 62


State 35

   49 Expr: T .
   50 T: T . TK_OC_AND F

    TK_OC_AND  shift, and go to state 63

    $default  reduce using rule 49 (Expr)


State 36

   51 T: F .
   52 F: F . TK_OC_EQ G
   53  | F . TK_OC_NE G

    TK_OC_EQ  shift, and go to state 64
    TK_OC_NE  shift, and go to state 65

    $default  reduce using rule 51 (T)


State 37

   54 F: G .
   55 G: G . TK_OC_LE I
   56  | G . TK_OC_GE I

    TK_OC_LE  shift, and go to state 66
    TK_OC_GE  shift, and go to state 67

    $default  reduce using rule 54 (F)


State 38

   57 G: I .
   58 I: I . '+' J
   59  | I . '-' J

    '+'  shift, and go to state 68
    '-'  shift, and go to state 69

    $default  reduce using rule 57 (G)


State 39

   60 I: J .
   61 J: J . '*' K
   62  | J . '/' K
   63  | J . '%' K

    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '%'  shift, and go to state 72

    $default  reduce using rule 60 (I)


State 40

   64 J: K .

    $default  reduce using rule 64 (J)


State 41

   67 K: L .

    $default  reduce using rule 67 (K)


State 42

   41 Atrib: ID '[' ExprList . ']' '=' Expr

    ']'  shift, and go to state 73


State 43

   12 VarList: ID ',' VarList .

    $default  reduce using rule 12 (VarList)


State 44

   12 VarList: ID . ',' VarList
   13        | ID .

    ','  shift, and go to state 19

    $default  reduce using rule 13 (VarList)


State 45

   27 Param: Type . ID

    TK_IDENTIFICADOR  shift, and go to state 11

    ID  go to state 74


State 46

   22 Func: ID '(' ParamList . ')' Block

    ')'  shift, and go to state 75


State 47

   24 ParamList: Param . ParamListEnd

    ','  shift, and go to state 76

    $default  reduce using rule 25 (ParamListEnd)

    ParamListEnd  go to state 77


State 48

   14 Lit: TK_LIT_INT .

    $default  reduce using rule 14 (Lit)


State 49

   40 Atrib: ID '=' Lit .
   70 L: Lit .

    ';'       reduce using rule 40 (Atrib)
    ';'       [reduce using rule 70 (L)]
    '}'       reduce using rule 40 (Atrib)
    '}'       [reduce using rule 70 (L)]
    $default  reduce using rule 70 (L)


State 50

   39 Atrib: ID '=' ID .
   46 FuncCall: ID . '(' ExprList ')'
   71 L: ID . '[' ArrayDim ']'
   72  | ID .

    '['  shift, and go to state 58
    '('  shift, and go to state 59

    ';'       reduce using rule 39 (Atrib)
    ';'       [reduce using rule 72 (L)]
    '}'       reduce using rule 39 (Atrib)
    '}'       [reduce using rule 72 (L)]
    $default  reduce using rule 72 (L)


State 51

   38 Atrib: ID '=' Expr .
   48 Expr: Expr . TK_OC_OR T

    TK_OC_OR  shift, and go to state 60

    $default  reduce using rule 38 (Atrib)


State 52

   21 ArrayDimEnd: '^' . TK_LIT_INT ArrayDimEnd

    TK_LIT_INT  shift, and go to state 78


State 53

   19 ArrayDim: TK_LIT_INT ArrayDimEnd .

    $default  reduce using rule 19 (ArrayDim)


State 54

   48 Expr: Expr . TK_OC_OR T
   68 L: '(' Expr . ')'

    TK_OC_OR  shift, and go to state 60
    ')'       shift, and go to state 79


State 55

   65 K: '-' L .

    $default  reduce using rule 65 (K)


State 56

   66 K: '!' L .

    $default  reduce using rule 66 (K)


State 57

    5 Dec: Type ID '[' ArrayDim ']' . ';'

    ';'  shift, and go to state 80


State 58

   71 L: ID '[' . ArrayDim ']'

    TK_LIT_INT  shift, and go to state 81

    ArrayDim  go to state 82


State 59

   46 FuncCall: ID '(' . ExprList ')'

    TK_LIT_INT        shift, and go to state 48
    TK_LIT_FLOAT      shift, and go to state 23
    TK_LIT_FALSE      shift, and go to state 24
    TK_LIT_TRUE       shift, and go to state 25
    TK_LIT_CHAR       shift, and go to state 26
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 27
    '-'               shift, and go to state 28
    '!'               shift, and go to state 29

    Lit       go to state 30
    FuncCall  go to state 32
    ID        go to state 33
    Expr      go to state 34
    T         go to state 35
    F         go to state 36
    G         go to state 37
    I         go to state 38
    J         go to state 39
    K         go to state 40
    L         go to state 41
    ExprList  go to state 83


State 60

   48 Expr: Expr TK_OC_OR . T

    TK_LIT_INT        shift, and go to state 48
    TK_LIT_FLOAT      shift, and go to state 23
    TK_LIT_FALSE      shift, and go to state 24
    TK_LIT_TRUE       shift, and go to state 25
    TK_LIT_CHAR       shift, and go to state 26
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 27
    '-'               shift, and go to state 28
    '!'               shift, and go to state 29

    Lit       go to state 30
    FuncCall  go to state 32
    ID        go to state 33
    T         go to state 84
    F         go to state 36
    G         go to state 37
    I         go to state 38
    J         go to state 39
    K         go to state 40
    L         go to state 41


State 61

   75 ExprListEnd: ',' . Expr ExprListEnd

    TK_LIT_INT        shift, and go to state 48
    TK_LIT_FLOAT      shift, and go to state 23
    TK_LIT_FALSE      shift, and go to state 24
    TK_LIT_TRUE       shift, and go to state 25
    TK_LIT_CHAR       shift, and go to state 26
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 27
    '-'               shift, and go to state 28
    '!'               shift, and go to state 29

    Lit       go to state 30
    FuncCall  go to state 32
    ID        go to state 33
    Expr      go to state 85
    T         go to state 35
    F         go to state 36
    G         go to state 37
    I         go to state 38
    J         go to state 39
    K         go to state 40
    L         go to state 41


State 62

   73 ExprList: Expr ExprListEnd .

    $default  reduce using rule 73 (ExprList)


State 63

   50 T: T TK_OC_AND . F

    TK_LIT_INT        shift, and go to state 48
    TK_LIT_FLOAT      shift, and go to state 23
    TK_LIT_FALSE      shift, and go to state 24
    TK_LIT_TRUE       shift, and go to state 25
    TK_LIT_CHAR       shift, and go to state 26
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 27
    '-'               shift, and go to state 28
    '!'               shift, and go to state 29

    Lit       go to state 30
    FuncCall  go to state 32
    ID        go to state 33
    F         go to state 86
    G         go to state 37
    I         go to state 38
    J         go to state 39
    K         go to state 40
    L         go to state 41


State 64

   52 F: F TK_OC_EQ . G

    TK_LIT_INT        shift, and go to state 48
    TK_LIT_FLOAT      shift, and go to state 23
    TK_LIT_FALSE      shift, and go to state 24
    TK_LIT_TRUE       shift, and go to state 25
    TK_LIT_CHAR       shift, and go to state 26
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 27
    '-'               shift, and go to state 28
    '!'               shift, and go to state 29

    Lit       go to state 30
    FuncCall  go to state 32
    ID        go to state 33
    G         go to state 87
    I         go to state 38
    J         go to state 39
    K         go to state 40
    L         go to state 41


State 65

   53 F: F TK_OC_NE . G

    TK_LIT_INT        shift, and go to state 48
    TK_LIT_FLOAT      shift, and go to state 23
    TK_LIT_FALSE      shift, and go to state 24
    TK_LIT_TRUE       shift, and go to state 25
    TK_LIT_CHAR       shift, and go to state 26
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 27
    '-'               shift, and go to state 28
    '!'               shift, and go to state 29

    Lit       go to state 30
    FuncCall  go to state 32
    ID        go to state 33
    G         go to state 88
    I         go to state 38
    J         go to state 39
    K         go to state 40
    L         go to state 41


State 66

   55 G: G TK_OC_LE . I

    TK_LIT_INT        shift, and go to state 48
    TK_LIT_FLOAT      shift, and go to state 23
    TK_LIT_FALSE      shift, and go to state 24
    TK_LIT_TRUE       shift, and go to state 25
    TK_LIT_CHAR       shift, and go to state 26
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 27
    '-'               shift, and go to state 28
    '!'               shift, and go to state 29

    Lit       go to state 30
    FuncCall  go to state 32
    ID        go to state 33
    I         go to state 89
    J         go to state 39
    K         go to state 40
    L         go to state 41


State 67

   56 G: G TK_OC_GE . I

    TK_LIT_INT        shift, and go to state 48
    TK_LIT_FLOAT      shift, and go to state 23
    TK_LIT_FALSE      shift, and go to state 24
    TK_LIT_TRUE       shift, and go to state 25
    TK_LIT_CHAR       shift, and go to state 26
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 27
    '-'               shift, and go to state 28
    '!'               shift, and go to state 29

    Lit       go to state 30
    FuncCall  go to state 32
    ID        go to state 33
    I         go to state 90
    J         go to state 39
    K         go to state 40
    L         go to state 41


State 68

   58 I: I '+' . J

    TK_LIT_INT        shift, and go to state 48
    TK_LIT_FLOAT      shift, and go to state 23
    TK_LIT_FALSE      shift, and go to state 24
    TK_LIT_TRUE       shift, and go to state 25
    TK_LIT_CHAR       shift, and go to state 26
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 27
    '-'               shift, and go to state 28
    '!'               shift, and go to state 29

    Lit       go to state 30
    FuncCall  go to state 32
    ID        go to state 33
    J         go to state 91
    K         go to state 40
    L         go to state 41


State 69

   59 I: I '-' . J

    TK_LIT_INT        shift, and go to state 48
    TK_LIT_FLOAT      shift, and go to state 23
    TK_LIT_FALSE      shift, and go to state 24
    TK_LIT_TRUE       shift, and go to state 25
    TK_LIT_CHAR       shift, and go to state 26
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 27
    '-'               shift, and go to state 28
    '!'               shift, and go to state 29

    Lit       go to state 30
    FuncCall  go to state 32
    ID        go to state 33
    J         go to state 92
    K         go to state 40
    L         go to state 41


State 70

   61 J: J '*' . K

    TK_LIT_INT        shift, and go to state 48
    TK_LIT_FLOAT      shift, and go to state 23
    TK_LIT_FALSE      shift, and go to state 24
    TK_LIT_TRUE       shift, and go to state 25
    TK_LIT_CHAR       shift, and go to state 26
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 27
    '-'               shift, and go to state 28
    '!'               shift, and go to state 29

    Lit       go to state 30
    FuncCall  go to state 32
    ID        go to state 33
    K         go to state 93
    L         go to state 41


State 71

   62 J: J '/' . K

    TK_LIT_INT        shift, and go to state 48
    TK_LIT_FLOAT      shift, and go to state 23
    TK_LIT_FALSE      shift, and go to state 24
    TK_LIT_TRUE       shift, and go to state 25
    TK_LIT_CHAR       shift, and go to state 26
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 27
    '-'               shift, and go to state 28
    '!'               shift, and go to state 29

    Lit       go to state 30
    FuncCall  go to state 32
    ID        go to state 33
    K         go to state 94
    L         go to state 41


State 72

   63 J: J '%' . K

    TK_LIT_INT        shift, and go to state 48
    TK_LIT_FLOAT      shift, and go to state 23
    TK_LIT_FALSE      shift, and go to state 24
    TK_LIT_TRUE       shift, and go to state 25
    TK_LIT_CHAR       shift, and go to state 26
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 27
    '-'               shift, and go to state 28
    '!'               shift, and go to state 29

    Lit       go to state 30
    FuncCall  go to state 32
    ID        go to state 33
    K         go to state 95
    L         go to state 41


State 73

   41 Atrib: ID '[' ExprList ']' . '=' Expr

    '='  shift, and go to state 96


State 74

   27 Param: Type ID .

    $default  reduce using rule 27 (Param)


State 75

   22 Func: ID '(' ParamList ')' . Block

    '{'  shift, and go to state 97

    Block  go to state 98


State 76

   26 ParamListEnd: ',' . Param ParamListEnd

    TK_PR_INT    shift, and go to state 1
    TK_PR_FLOAT  shift, and go to state 2
    TK_PR_BOOL   shift, and go to state 3
    TK_PR_CHAR   shift, and go to state 4

    Type   go to state 45
    Param  go to state 99


State 77

   24 ParamList: Param ParamListEnd .

    $default  reduce using rule 24 (ParamList)


State 78

   21 ArrayDimEnd: '^' TK_LIT_INT . ArrayDimEnd

    '^'  shift, and go to state 52

    $default  reduce using rule 20 (ArrayDimEnd)

    ArrayDimEnd  go to state 100


State 79

   68 L: '(' Expr ')' .

    $default  reduce using rule 68 (L)


State 80

    5 Dec: Type ID '[' ArrayDim ']' ';' .

    $default  reduce using rule 5 (Dec)


State 81

   19 ArrayDim: TK_LIT_INT . ArrayDimEnd

    '^'  shift, and go to state 52

    $default  reduce using rule 20 (ArrayDimEnd)

    ArrayDimEnd  go to state 53


State 82

   71 L: ID '[' ArrayDim . ']'

    ']'  shift, and go to state 101


State 83

   46 FuncCall: ID '(' ExprList . ')'

    ')'  shift, and go to state 102


State 84

   48 Expr: Expr TK_OC_OR T .
   50 T: T . TK_OC_AND F

    TK_OC_AND  shift, and go to state 63

    $default  reduce using rule 48 (Expr)


State 85

   48 Expr: Expr . TK_OC_OR T
   75 ExprListEnd: ',' Expr . ExprListEnd

    TK_OC_OR  shift, and go to state 60
    ','       shift, and go to state 61

    $default  reduce using rule 74 (ExprListEnd)

    ExprListEnd  go to state 103


State 86

   50 T: T TK_OC_AND F .
   52 F: F . TK_OC_EQ G
   53  | F . TK_OC_NE G

    TK_OC_EQ  shift, and go to state 64
    TK_OC_NE  shift, and go to state 65

    $default  reduce using rule 50 (T)


State 87

   52 F: F TK_OC_EQ G .
   55 G: G . TK_OC_LE I
   56  | G . TK_OC_GE I

    TK_OC_LE  shift, and go to state 66
    TK_OC_GE  shift, and go to state 67

    $default  reduce using rule 52 (F)


State 88

   53 F: F TK_OC_NE G .
   55 G: G . TK_OC_LE I
   56  | G . TK_OC_GE I

    TK_OC_LE  shift, and go to state 66
    TK_OC_GE  shift, and go to state 67

    $default  reduce using rule 53 (F)


State 89

   55 G: G TK_OC_LE I .
   58 I: I . '+' J
   59  | I . '-' J

    '+'  shift, and go to state 68
    '-'  shift, and go to state 69

    $default  reduce using rule 55 (G)


State 90

   56 G: G TK_OC_GE I .
   58 I: I . '+' J
   59  | I . '-' J

    '+'  shift, and go to state 68
    '-'  shift, and go to state 69

    $default  reduce using rule 56 (G)


State 91

   58 I: I '+' J .
   61 J: J . '*' K
   62  | J . '/' K
   63  | J . '%' K

    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '%'  shift, and go to state 72

    $default  reduce using rule 58 (I)


State 92

   59 I: I '-' J .
   61 J: J . '*' K
   62  | J . '/' K
   63  | J . '%' K

    '*'  shift, and go to state 70
    '/'  shift, and go to state 71
    '%'  shift, and go to state 72

    $default  reduce using rule 59 (I)


State 93

   61 J: J '*' K .

    $default  reduce using rule 61 (J)


State 94

   62 J: J '/' K .

    $default  reduce using rule 62 (J)


State 95

   63 J: J '%' K .

    $default  reduce using rule 63 (J)


State 96

   41 Atrib: ID '[' ExprList ']' '=' . Expr

    TK_LIT_INT        shift, and go to state 48
    TK_LIT_FLOAT      shift, and go to state 23
    TK_LIT_FALSE      shift, and go to state 24
    TK_LIT_TRUE       shift, and go to state 25
    TK_LIT_CHAR       shift, and go to state 26
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 27
    '-'               shift, and go to state 28
    '!'               shift, and go to state 29

    Lit       go to state 30
    FuncCall  go to state 32
    ID        go to state 33
    Expr      go to state 104
    T         go to state 35
    F         go to state 36
    G         go to state 37
    I         go to state 38
    J         go to state 39
    K         go to state 40
    L         go to state 41


State 97

   28 Block: '{' . CommandList '}'

    TK_PR_INT         shift, and go to state 1
    TK_PR_FLOAT       shift, and go to state 2
    TK_PR_BOOL        shift, and go to state 3
    TK_PR_CHAR        shift, and go to state 4
    TK_PR_IF          shift, and go to state 105
    TK_PR_WHILE       shift, and go to state 106
    TK_PR_RETURN      shift, and go to state 107
    TK_IDENTIFICADOR  shift, and go to state 11

    $default  reduce using rule 32 (Command)

    Dec          go to state 108
    Type         go to state 8
    CommandList  go to state 109
    Command      go to state 110
    Atrib        go to state 111
    Flow         go to state 112
    Ret          go to state 113
    FuncCall     go to state 114
    ID           go to state 115


State 98

   22 Func: ID '(' ParamList ')' Block .

    $default  reduce using rule 22 (Func)


State 99

   26 ParamListEnd: ',' Param . ParamListEnd

    ','  shift, and go to state 76

    $default  reduce using rule 25 (ParamListEnd)

    ParamListEnd  go to state 116


State 100

   21 ArrayDimEnd: '^' TK_LIT_INT ArrayDimEnd .

    $default  reduce using rule 21 (ArrayDimEnd)


State 101

   71 L: ID '[' ArrayDim ']' .

    $default  reduce using rule 71 (L)


State 102

   46 FuncCall: ID '(' ExprList ')' .

    $default  reduce using rule 46 (FuncCall)


State 103

   75 ExprListEnd: ',' Expr ExprListEnd .

    $default  reduce using rule 75 (ExprListEnd)


State 104

   41 Atrib: ID '[' ExprList ']' '=' Expr .
   48 Expr: Expr . TK_OC_OR T

    TK_OC_OR  shift, and go to state 60

    $default  reduce using rule 41 (Atrib)


State 105

   43 Flow: TK_PR_IF . '(' Expr ')' TK_PR_THEN Block
   44     | TK_PR_IF . '(' Expr ')' TK_PR_THEN Block TK_PR_ELSE Block

    '('  shift, and go to state 117


State 106

   42 Flow: TK_PR_WHILE . '(' Expr ')' Block

    '('  shift, and go to state 118


State 107

   45 Ret: TK_PR_RETURN . Expr

    TK_LIT_INT        shift, and go to state 48
    TK_LIT_FLOAT      shift, and go to state 23
    TK_LIT_FALSE      shift, and go to state 24
    TK_LIT_TRUE       shift, and go to state 25
    TK_LIT_CHAR       shift, and go to state 26
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 27
    '-'               shift, and go to state 28
    '!'               shift, and go to state 29

    Lit       go to state 30
    FuncCall  go to state 32
    ID        go to state 33
    Expr      go to state 119
    T         go to state 35
    F         go to state 36
    G         go to state 37
    I         go to state 38
    J         go to state 39
    K         go to state 40
    L         go to state 41


State 108

   35 Command: Dec .

    $default  reduce using rule 35 (Command)


State 109

   28 Block: '{' CommandList . '}'

    '}'  shift, and go to state 120


State 110

   29 CommandList: Command . CommandListEnd

    ';'  shift, and go to state 121

    $default  reduce using rule 30 (CommandListEnd)

    CommandListEnd  go to state 122


State 111

   34 Command: Atrib .

    $default  reduce using rule 34 (Command)


State 112

   33 Command: Flow .

    $default  reduce using rule 33 (Command)


State 113

   36 Command: Ret .

    $default  reduce using rule 36 (Command)


State 114

   37 Command: FuncCall .

    $default  reduce using rule 37 (Command)


State 115

   38 Atrib: ID . '=' Expr
   39      | ID . '=' ID
   40      | ID . '=' Lit
   41      | ID . '[' ExprList ']' '=' Expr
   46 FuncCall: ID . '(' ExprList ')'

    '['  shift, and go to state 123
    '('  shift, and go to state 59
    '='  shift, and go to state 21


State 116

   26 ParamListEnd: ',' Param ParamListEnd .

    $default  reduce using rule 26 (ParamListEnd)


State 117

   43 Flow: TK_PR_IF '(' . Expr ')' TK_PR_THEN Block
   44     | TK_PR_IF '(' . Expr ')' TK_PR_THEN Block TK_PR_ELSE Block

    TK_LIT_INT        shift, and go to state 48
    TK_LIT_FLOAT      shift, and go to state 23
    TK_LIT_FALSE      shift, and go to state 24
    TK_LIT_TRUE       shift, and go to state 25
    TK_LIT_CHAR       shift, and go to state 26
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 27
    '-'               shift, and go to state 28
    '!'               shift, and go to state 29

    Lit       go to state 30
    FuncCall  go to state 32
    ID        go to state 33
    Expr      go to state 124
    T         go to state 35
    F         go to state 36
    G         go to state 37
    I         go to state 38
    J         go to state 39
    K         go to state 40
    L         go to state 41


State 118

   42 Flow: TK_PR_WHILE '(' . Expr ')' Block

    TK_LIT_INT        shift, and go to state 48
    TK_LIT_FLOAT      shift, and go to state 23
    TK_LIT_FALSE      shift, and go to state 24
    TK_LIT_TRUE       shift, and go to state 25
    TK_LIT_CHAR       shift, and go to state 26
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 27
    '-'               shift, and go to state 28
    '!'               shift, and go to state 29

    Lit       go to state 30
    FuncCall  go to state 32
    ID        go to state 33
    Expr      go to state 125
    T         go to state 35
    F         go to state 36
    G         go to state 37
    I         go to state 38
    J         go to state 39
    K         go to state 40
    L         go to state 41


State 119

   45 Ret: TK_PR_RETURN Expr .
   48 Expr: Expr . TK_OC_OR T

    TK_OC_OR  shift, and go to state 60

    $default  reduce using rule 45 (Ret)


State 120

   28 Block: '{' CommandList '}' .

    $default  reduce using rule 28 (Block)


State 121

   31 CommandListEnd: ';' . Command CommandListEnd

    TK_PR_INT         shift, and go to state 1
    TK_PR_FLOAT       shift, and go to state 2
    TK_PR_BOOL        shift, and go to state 3
    TK_PR_CHAR        shift, and go to state 4
    TK_PR_IF          shift, and go to state 105
    TK_PR_WHILE       shift, and go to state 106
    TK_PR_RETURN      shift, and go to state 107
    TK_IDENTIFICADOR  shift, and go to state 11

    $default  reduce using rule 32 (Command)

    Dec       go to state 108
    Type      go to state 8
    Command   go to state 126
    Atrib     go to state 111
    Flow      go to state 112
    Ret       go to state 113
    FuncCall  go to state 114
    ID        go to state 115


State 122

   29 CommandList: Command CommandListEnd .

    $default  reduce using rule 29 (CommandList)


State 123

   41 Atrib: ID '[' . ExprList ']' '=' Expr

    TK_LIT_INT        shift, and go to state 48
    TK_LIT_FLOAT      shift, and go to state 23
    TK_LIT_FALSE      shift, and go to state 24
    TK_LIT_TRUE       shift, and go to state 25
    TK_LIT_CHAR       shift, and go to state 26
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 27
    '-'               shift, and go to state 28
    '!'               shift, and go to state 29

    Lit       go to state 30
    FuncCall  go to state 32
    ID        go to state 33
    Expr      go to state 34
    T         go to state 35
    F         go to state 36
    G         go to state 37
    I         go to state 38
    J         go to state 39
    K         go to state 40
    L         go to state 41
    ExprList  go to state 42


State 124

   43 Flow: TK_PR_IF '(' Expr . ')' TK_PR_THEN Block
   44     | TK_PR_IF '(' Expr . ')' TK_PR_THEN Block TK_PR_ELSE Block
   48 Expr: Expr . TK_OC_OR T

    TK_OC_OR  shift, and go to state 60
    ')'       shift, and go to state 127


State 125

   42 Flow: TK_PR_WHILE '(' Expr . ')' Block
   48 Expr: Expr . TK_OC_OR T

    TK_OC_OR  shift, and go to state 60
    ')'       shift, and go to state 128


State 126

   31 CommandListEnd: ';' Command . CommandListEnd

    ';'  shift, and go to state 121

    $default  reduce using rule 30 (CommandListEnd)

    CommandListEnd  go to state 129


State 127

   43 Flow: TK_PR_IF '(' Expr ')' . TK_PR_THEN Block
   44     | TK_PR_IF '(' Expr ')' . TK_PR_THEN Block TK_PR_ELSE Block

    TK_PR_THEN  shift, and go to state 130


State 128

   42 Flow: TK_PR_WHILE '(' Expr ')' . Block

    '{'  shift, and go to state 97

    Block  go to state 131


State 129

   31 CommandListEnd: ';' Command CommandListEnd .

    $default  reduce using rule 31 (CommandListEnd)


State 130

   43 Flow: TK_PR_IF '(' Expr ')' TK_PR_THEN . Block
   44     | TK_PR_IF '(' Expr ')' TK_PR_THEN . Block TK_PR_ELSE Block

    '{'  shift, and go to state 97

    Block  go to state 132


State 131

   42 Flow: TK_PR_WHILE '(' Expr ')' Block .

    $default  reduce using rule 42 (Flow)


State 132

   43 Flow: TK_PR_IF '(' Expr ')' TK_PR_THEN Block .
   44     | TK_PR_IF '(' Expr ')' TK_PR_THEN Block . TK_PR_ELSE Block

    TK_PR_ELSE  shift, and go to state 133

    $default  reduce using rule 43 (Flow)


State 133

   44 Flow: TK_PR_IF '(' Expr ')' TK_PR_THEN Block TK_PR_ELSE . Block

    '{'  shift, and go to state 97

    Block  go to state 134


State 134

   44 Flow: TK_PR_IF '(' Expr ')' TK_PR_THEN Block TK_PR_ELSE Block .

    $default  reduce using rule 44 (Flow)
