Terminals unused in grammar

    TK_PR_INPUT
    TK_PR_OUTPUT
    TK_PR_FOR
    TK_ERRO


Grammar

    0 $accept: Program $end

    1 Program: DecList

    2 DecList: %empty
    3        | Dec DecList

    4 Dec: Type VarList ';'
    5    | Type ID '[' ArrayDim ']' ';'
    6    | Type Atrib ';'
    7    | Type Func

    8 Type: TK_PR_INT
    9     | TK_PR_FLOAT
   10     | TK_PR_BOOL
   11     | TK_PR_CHAR

   12 VarList: ID ',' VarList
   13        | ID

   14 ArrayDim: TK_LIT_INT '^' ArrayDimEnd

   15 ArrayDimEnd: TK_LIT_INT '^' ArrayDimEnd
   16            | TK_LIT_INT

   17 Lit: TK_LIT_INT
   18    | TK_LIT_FLOAT
   19    | TK_LIT_FALSE
   20    | TK_LIT_TRUE
   21    | TK_LIT_CHAR

   22 Func: ID '(' ParamList ')' Block

   23 ParamList: %empty
   24          | Param ParamListEnd

   25 ParamListEnd: %empty
   26             | ',' Param ParamListEnd

   27 Param: Type ID

   28 Block: '{' CommandList '}'

   29 CommandList: Command CommandListEnd

   30 CommandListEnd: %empty
   31               | ';' Command CommandListEnd

   32 Command: %empty
   33        | Flow
   34        | Atrib
   35        | Dec
   36        | Ret
   37        | FuncCall

   38 Atrib: ID '=' Expr
   39      | ID '[' ExprList ']' '=' Expr

   40 Flow: TK_PR_WHILE '(' Expr ')' Block
   41     | TK_PR_IF '(' Expr ')' TK_PR_THEN Block
   42     | TK_PR_IF '(' Expr ')' TK_PR_THEN Block TK_PR_ELSE Block

   43 Ret: TK_PR_RETURN Expr

   44 FuncCall: ID '(' ExprList ')'

   45 ID: TK_IDENTIFICADOR

   46 Expr: Expr TK_OC_OR T
   47     | T

   48 T: T TK_OC_AND F
   49  | F

   50 F: F TK_OC_EQ G
   51  | F TK_OC_NE G
   52  | G

   53 G: G TK_OC_LE I
   54  | G TK_OC_GE I
   55  | I

   56 I: I '+' J
   57  | I '-' J
   58  | J

   59 J: J '*' K
   60  | J '/' K
   61  | J '%' K
   62  | K

   63 K: '-' L
   64  | '!' L
   65  | L

   66 L: '(' Expr ')'
   67  | FuncCall
   68  | ID '[' ArrayDim ']'
   69  | ID
   70  | Lit

   71 ExprList: Expr ExprListEnd

   72 ExprListEnd: %empty
   73            | ',' Expr ExprListEnd


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 64
    '%' (37) 61
    '(' (40) 22 40 41 42 44 66
    ')' (41) 22 40 41 42 44 66
    '*' (42) 59
    '+' (43) 56
    ',' (44) 12 26 73
    '-' (45) 57 63
    '/' (47) 60
    ';' (59) 4 5 6 31
    '=' (61) 38 39
    '[' (91) 5 39 68
    ']' (93) 5 39 68
    '^' (94) 14 15
    '{' (123) 28
    '}' (125) 28
    error (256)
    TK_PR_INT (258) 8
    TK_PR_FLOAT (259) 9
    TK_PR_BOOL (260) 10
    TK_PR_CHAR (261) 11
    TK_PR_IF (262) 41 42
    TK_PR_THEN (263) 41 42
    TK_PR_ELSE (264) 42
    TK_PR_WHILE (265) 40
    TK_PR_INPUT (266)
    TK_PR_OUTPUT (267)
    TK_PR_RETURN (268) 43
    TK_PR_FOR (269)
    TK_OC_LE (270) 53
    TK_OC_GE (271) 54
    TK_OC_EQ (272) 50
    TK_OC_NE (273) 51
    TK_OC_AND (274) 48
    TK_OC_OR (275) 46
    TK_LIT_INT (276) 14 15 16 17
    TK_LIT_FLOAT (277) 18
    TK_LIT_FALSE (278) 19
    TK_LIT_TRUE (279) 20
    TK_LIT_CHAR (280) 21
    TK_IDENTIFICADOR (281) 45
    TK_ERRO (282)


Nonterminals, with rules where they appear

    $accept (44)
        on left: 0
    Program (45)
        on left: 1
        on right: 0
    DecList (46)
        on left: 2 3
        on right: 1 3
    Dec (47)
        on left: 4 5 6 7
        on right: 3 35
    Type (48)
        on left: 8 9 10 11
        on right: 4 5 6 7 27
    VarList (49)
        on left: 12 13
        on right: 4 12
    ArrayDim (50)
        on left: 14
        on right: 5 68
    ArrayDimEnd (51)
        on left: 15 16
        on right: 14 15
    Lit (52)
        on left: 17 18 19 20 21
        on right: 70
    Func (53)
        on left: 22
        on right: 7
    ParamList (54)
        on left: 23 24
        on right: 22
    ParamListEnd (55)
        on left: 25 26
        on right: 24 26
    Param (56)
        on left: 27
        on right: 24 26
    Block (57)
        on left: 28
        on right: 22 40 41 42
    CommandList (58)
        on left: 29
        on right: 28
    CommandListEnd (59)
        on left: 30 31
        on right: 29 31
    Command (60)
        on left: 32 33 34 35 36 37
        on right: 29 31
    Atrib (61)
        on left: 38 39
        on right: 6 34
    Flow (62)
        on left: 40 41 42
        on right: 33
    Ret (63)
        on left: 43
        on right: 36
    FuncCall (64)
        on left: 44
        on right: 37 67
    ID (65)
        on left: 45
        on right: 5 12 13 22 27 38 39 44 68 69
    Expr (66)
        on left: 46 47
        on right: 38 39 40 41 42 43 46 66 71 73
    T (67)
        on left: 48 49
        on right: 46 47 48
    F (68)
        on left: 50 51 52
        on right: 48 49 50 51
    G (69)
        on left: 53 54 55
        on right: 50 51 52 53 54
    I (70)
        on left: 56 57 58
        on right: 53 54 55 56 57
    J (71)
        on left: 59 60 61 62
        on right: 56 57 58 59 60 61
    K (72)
        on left: 63 64 65
        on right: 59 60 61 62
    L (73)
        on left: 66 67 68 69 70
        on right: 63 64 65
    ExprList (74)
        on left: 71
        on right: 39 44
    ExprListEnd (75)
        on left: 72 73
        on right: 71 73


State 0

    0 $accept: . Program $end

    TK_PR_INT    shift, and go to state 1
    TK_PR_FLOAT  shift, and go to state 2
    TK_PR_BOOL   shift, and go to state 3
    TK_PR_CHAR   shift, and go to state 4

    $default  reduce using rule 2 (DecList)

    Program  go to state 5
    DecList  go to state 6
    Dec      go to state 7
    Type     go to state 8


State 1

    8 Type: TK_PR_INT .

    $default  reduce using rule 8 (Type)


State 2

    9 Type: TK_PR_FLOAT .

    $default  reduce using rule 9 (Type)


State 3

   10 Type: TK_PR_BOOL .

    $default  reduce using rule 10 (Type)


State 4

   11 Type: TK_PR_CHAR .

    $default  reduce using rule 11 (Type)


State 5

    0 $accept: Program . $end

    $end  shift, and go to state 9


State 6

    1 Program: DecList .

    $default  reduce using rule 1 (Program)


State 7

    3 DecList: Dec . DecList

    TK_PR_INT    shift, and go to state 1
    TK_PR_FLOAT  shift, and go to state 2
    TK_PR_BOOL   shift, and go to state 3
    TK_PR_CHAR   shift, and go to state 4

    $default  reduce using rule 2 (DecList)

    DecList  go to state 10
    Dec      go to state 7
    Type     go to state 8


State 8

    4 Dec: Type . VarList ';'
    5    | Type . ID '[' ArrayDim ']' ';'
    6    | Type . Atrib ';'
    7    | Type . Func

    TK_IDENTIFICADOR  shift, and go to state 11

    VarList  go to state 12
    Func     go to state 13
    Atrib    go to state 14
    ID       go to state 15


State 9

    0 $accept: Program $end .

    $default  accept


State 10

    3 DecList: Dec DecList .

    $default  reduce using rule 3 (DecList)


State 11

   45 ID: TK_IDENTIFICADOR .

    $default  reduce using rule 45 (ID)


State 12

    4 Dec: Type VarList . ';'

    ';'  shift, and go to state 16


State 13

    7 Dec: Type Func .

    $default  reduce using rule 7 (Dec)


State 14

    6 Dec: Type Atrib . ';'

    ';'  shift, and go to state 17


State 15

    5 Dec: Type ID . '[' ArrayDim ']' ';'
   12 VarList: ID . ',' VarList
   13        | ID .
   22 Func: ID . '(' ParamList ')' Block
   38 Atrib: ID . '=' Expr
   39      | ID . '[' ExprList ']' '=' Expr

    '['  shift, and go to state 18
    ','  shift, and go to state 19
    '('  shift, and go to state 20
    '='  shift, and go to state 21

    $default  reduce using rule 13 (VarList)


State 16

    4 Dec: Type VarList ';' .

    $default  reduce using rule 4 (Dec)


State 17

    6 Dec: Type Atrib ';' .

    $default  reduce using rule 6 (Dec)


State 18

    5 Dec: Type ID '[' . ArrayDim ']' ';'
   39 Atrib: ID '[' . ExprList ']' '=' Expr

    TK_LIT_INT        shift, and go to state 22
    TK_LIT_FLOAT      shift, and go to state 23
    TK_LIT_FALSE      shift, and go to state 24
    TK_LIT_TRUE       shift, and go to state 25
    TK_LIT_CHAR       shift, and go to state 26
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 27
    '-'               shift, and go to state 28
    '!'               shift, and go to state 29

    ArrayDim  go to state 30
    Lit       go to state 31
    FuncCall  go to state 32
    ID        go to state 33
    Expr      go to state 34
    T         go to state 35
    F         go to state 36
    G         go to state 37
    I         go to state 38
    J         go to state 39
    K         go to state 40
    L         go to state 41
    ExprList  go to state 42


State 19

   12 VarList: ID ',' . VarList

    TK_IDENTIFICADOR  shift, and go to state 11

    VarList  go to state 43
    ID       go to state 44


State 20

   22 Func: ID '(' . ParamList ')' Block

    TK_PR_INT    shift, and go to state 1
    TK_PR_FLOAT  shift, and go to state 2
    TK_PR_BOOL   shift, and go to state 3
    TK_PR_CHAR   shift, and go to state 4

    $default  reduce using rule 23 (ParamList)

    Type       go to state 45
    ParamList  go to state 46
    Param      go to state 47


State 21

   38 Atrib: ID '=' . Expr

    TK_LIT_INT        shift, and go to state 48
    TK_LIT_FLOAT      shift, and go to state 23
    TK_LIT_FALSE      shift, and go to state 24
    TK_LIT_TRUE       shift, and go to state 25
    TK_LIT_CHAR       shift, and go to state 26
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 27
    '-'               shift, and go to state 28
    '!'               shift, and go to state 29

    Lit       go to state 31
    FuncCall  go to state 32
    ID        go to state 33
    Expr      go to state 49
    T         go to state 35
    F         go to state 36
    G         go to state 37
    I         go to state 38
    J         go to state 39
    K         go to state 40
    L         go to state 41


State 22

   14 ArrayDim: TK_LIT_INT . '^' ArrayDimEnd
   17 Lit: TK_LIT_INT .

    '^'  shift, and go to state 50

    $default  reduce using rule 17 (Lit)


State 23

   18 Lit: TK_LIT_FLOAT .

    $default  reduce using rule 18 (Lit)


State 24

   19 Lit: TK_LIT_FALSE .

    $default  reduce using rule 19 (Lit)


State 25

   20 Lit: TK_LIT_TRUE .

    $default  reduce using rule 20 (Lit)


State 26

   21 Lit: TK_LIT_CHAR .

    $default  reduce using rule 21 (Lit)


State 27

   66 L: '(' . Expr ')'

    TK_LIT_INT        shift, and go to state 48
    TK_LIT_FLOAT      shift, and go to state 23
    TK_LIT_FALSE      shift, and go to state 24
    TK_LIT_TRUE       shift, and go to state 25
    TK_LIT_CHAR       shift, and go to state 26
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 27
    '-'               shift, and go to state 28
    '!'               shift, and go to state 29

    Lit       go to state 31
    FuncCall  go to state 32
    ID        go to state 33
    Expr      go to state 51
    T         go to state 35
    F         go to state 36
    G         go to state 37
    I         go to state 38
    J         go to state 39
    K         go to state 40
    L         go to state 41


State 28

   63 K: '-' . L

    TK_LIT_INT        shift, and go to state 48
    TK_LIT_FLOAT      shift, and go to state 23
    TK_LIT_FALSE      shift, and go to state 24
    TK_LIT_TRUE       shift, and go to state 25
    TK_LIT_CHAR       shift, and go to state 26
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 27

    Lit       go to state 31
    FuncCall  go to state 32
    ID        go to state 33
    L         go to state 52


State 29

   64 K: '!' . L

    TK_LIT_INT        shift, and go to state 48
    TK_LIT_FLOAT      shift, and go to state 23
    TK_LIT_FALSE      shift, and go to state 24
    TK_LIT_TRUE       shift, and go to state 25
    TK_LIT_CHAR       shift, and go to state 26
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 27

    Lit       go to state 31
    FuncCall  go to state 32
    ID        go to state 33
    L         go to state 53


State 30

    5 Dec: Type ID '[' ArrayDim . ']' ';'

    ']'  shift, and go to state 54


State 31

   70 L: Lit .

    $default  reduce using rule 70 (L)


State 32

   67 L: FuncCall .

    $default  reduce using rule 67 (L)


State 33

   44 FuncCall: ID . '(' ExprList ')'
   68 L: ID . '[' ArrayDim ']'
   69  | ID .

    '['  shift, and go to state 55
    '('  shift, and go to state 56

    $default  reduce using rule 69 (L)


State 34

   46 Expr: Expr . TK_OC_OR T
   71 ExprList: Expr . ExprListEnd

    TK_OC_OR  shift, and go to state 57
    ','       shift, and go to state 58

    $default  reduce using rule 72 (ExprListEnd)

    ExprListEnd  go to state 59


State 35

   47 Expr: T .
   48 T: T . TK_OC_AND F

    TK_OC_AND  shift, and go to state 60

    $default  reduce using rule 47 (Expr)


State 36

   49 T: F .
   50 F: F . TK_OC_EQ G
   51  | F . TK_OC_NE G

    TK_OC_EQ  shift, and go to state 61
    TK_OC_NE  shift, and go to state 62

    $default  reduce using rule 49 (T)


State 37

   52 F: G .
   53 G: G . TK_OC_LE I
   54  | G . TK_OC_GE I

    TK_OC_LE  shift, and go to state 63
    TK_OC_GE  shift, and go to state 64

    $default  reduce using rule 52 (F)


State 38

   55 G: I .
   56 I: I . '+' J
   57  | I . '-' J

    '+'  shift, and go to state 65
    '-'  shift, and go to state 66

    $default  reduce using rule 55 (G)


State 39

   58 I: J .
   59 J: J . '*' K
   60  | J . '/' K
   61  | J . '%' K

    '*'  shift, and go to state 67
    '/'  shift, and go to state 68
    '%'  shift, and go to state 69

    $default  reduce using rule 58 (I)


State 40

   62 J: K .

    $default  reduce using rule 62 (J)


State 41

   65 K: L .

    $default  reduce using rule 65 (K)


State 42

   39 Atrib: ID '[' ExprList . ']' '=' Expr

    ']'  shift, and go to state 70


State 43

   12 VarList: ID ',' VarList .

    $default  reduce using rule 12 (VarList)


State 44

   12 VarList: ID . ',' VarList
   13        | ID .

    ','  shift, and go to state 19

    $default  reduce using rule 13 (VarList)


State 45

   27 Param: Type . ID

    TK_IDENTIFICADOR  shift, and go to state 11

    ID  go to state 71


State 46

   22 Func: ID '(' ParamList . ')' Block

    ')'  shift, and go to state 72


State 47

   24 ParamList: Param . ParamListEnd

    ','  shift, and go to state 73

    $default  reduce using rule 25 (ParamListEnd)

    ParamListEnd  go to state 74


State 48

   17 Lit: TK_LIT_INT .

    $default  reduce using rule 17 (Lit)


State 49

   38 Atrib: ID '=' Expr .
   46 Expr: Expr . TK_OC_OR T

    TK_OC_OR  shift, and go to state 57

    $default  reduce using rule 38 (Atrib)


State 50

   14 ArrayDim: TK_LIT_INT '^' . ArrayDimEnd

    TK_LIT_INT  shift, and go to state 75

    ArrayDimEnd  go to state 76


State 51

   46 Expr: Expr . TK_OC_OR T
   66 L: '(' Expr . ')'

    TK_OC_OR  shift, and go to state 57
    ')'       shift, and go to state 77


State 52

   63 K: '-' L .

    $default  reduce using rule 63 (K)


State 53

   64 K: '!' L .

    $default  reduce using rule 64 (K)


State 54

    5 Dec: Type ID '[' ArrayDim ']' . ';'

    ';'  shift, and go to state 78


State 55

   68 L: ID '[' . ArrayDim ']'

    TK_LIT_INT  shift, and go to state 79

    ArrayDim  go to state 80


State 56

   44 FuncCall: ID '(' . ExprList ')'

    TK_LIT_INT        shift, and go to state 48
    TK_LIT_FLOAT      shift, and go to state 23
    TK_LIT_FALSE      shift, and go to state 24
    TK_LIT_TRUE       shift, and go to state 25
    TK_LIT_CHAR       shift, and go to state 26
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 27
    '-'               shift, and go to state 28
    '!'               shift, and go to state 29

    Lit       go to state 31
    FuncCall  go to state 32
    ID        go to state 33
    Expr      go to state 34
    T         go to state 35
    F         go to state 36
    G         go to state 37
    I         go to state 38
    J         go to state 39
    K         go to state 40
    L         go to state 41
    ExprList  go to state 81


State 57

   46 Expr: Expr TK_OC_OR . T

    TK_LIT_INT        shift, and go to state 48
    TK_LIT_FLOAT      shift, and go to state 23
    TK_LIT_FALSE      shift, and go to state 24
    TK_LIT_TRUE       shift, and go to state 25
    TK_LIT_CHAR       shift, and go to state 26
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 27
    '-'               shift, and go to state 28
    '!'               shift, and go to state 29

    Lit       go to state 31
    FuncCall  go to state 32
    ID        go to state 33
    T         go to state 82
    F         go to state 36
    G         go to state 37
    I         go to state 38
    J         go to state 39
    K         go to state 40
    L         go to state 41


State 58

   73 ExprListEnd: ',' . Expr ExprListEnd

    TK_LIT_INT        shift, and go to state 48
    TK_LIT_FLOAT      shift, and go to state 23
    TK_LIT_FALSE      shift, and go to state 24
    TK_LIT_TRUE       shift, and go to state 25
    TK_LIT_CHAR       shift, and go to state 26
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 27
    '-'               shift, and go to state 28
    '!'               shift, and go to state 29

    Lit       go to state 31
    FuncCall  go to state 32
    ID        go to state 33
    Expr      go to state 83
    T         go to state 35
    F         go to state 36
    G         go to state 37
    I         go to state 38
    J         go to state 39
    K         go to state 40
    L         go to state 41


State 59

   71 ExprList: Expr ExprListEnd .

    $default  reduce using rule 71 (ExprList)


State 60

   48 T: T TK_OC_AND . F

    TK_LIT_INT        shift, and go to state 48
    TK_LIT_FLOAT      shift, and go to state 23
    TK_LIT_FALSE      shift, and go to state 24
    TK_LIT_TRUE       shift, and go to state 25
    TK_LIT_CHAR       shift, and go to state 26
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 27
    '-'               shift, and go to state 28
    '!'               shift, and go to state 29

    Lit       go to state 31
    FuncCall  go to state 32
    ID        go to state 33
    F         go to state 84
    G         go to state 37
    I         go to state 38
    J         go to state 39
    K         go to state 40
    L         go to state 41


State 61

   50 F: F TK_OC_EQ . G

    TK_LIT_INT        shift, and go to state 48
    TK_LIT_FLOAT      shift, and go to state 23
    TK_LIT_FALSE      shift, and go to state 24
    TK_LIT_TRUE       shift, and go to state 25
    TK_LIT_CHAR       shift, and go to state 26
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 27
    '-'               shift, and go to state 28
    '!'               shift, and go to state 29

    Lit       go to state 31
    FuncCall  go to state 32
    ID        go to state 33
    G         go to state 85
    I         go to state 38
    J         go to state 39
    K         go to state 40
    L         go to state 41


State 62

   51 F: F TK_OC_NE . G

    TK_LIT_INT        shift, and go to state 48
    TK_LIT_FLOAT      shift, and go to state 23
    TK_LIT_FALSE      shift, and go to state 24
    TK_LIT_TRUE       shift, and go to state 25
    TK_LIT_CHAR       shift, and go to state 26
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 27
    '-'               shift, and go to state 28
    '!'               shift, and go to state 29

    Lit       go to state 31
    FuncCall  go to state 32
    ID        go to state 33
    G         go to state 86
    I         go to state 38
    J         go to state 39
    K         go to state 40
    L         go to state 41


State 63

   53 G: G TK_OC_LE . I

    TK_LIT_INT        shift, and go to state 48
    TK_LIT_FLOAT      shift, and go to state 23
    TK_LIT_FALSE      shift, and go to state 24
    TK_LIT_TRUE       shift, and go to state 25
    TK_LIT_CHAR       shift, and go to state 26
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 27
    '-'               shift, and go to state 28
    '!'               shift, and go to state 29

    Lit       go to state 31
    FuncCall  go to state 32
    ID        go to state 33
    I         go to state 87
    J         go to state 39
    K         go to state 40
    L         go to state 41


State 64

   54 G: G TK_OC_GE . I

    TK_LIT_INT        shift, and go to state 48
    TK_LIT_FLOAT      shift, and go to state 23
    TK_LIT_FALSE      shift, and go to state 24
    TK_LIT_TRUE       shift, and go to state 25
    TK_LIT_CHAR       shift, and go to state 26
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 27
    '-'               shift, and go to state 28
    '!'               shift, and go to state 29

    Lit       go to state 31
    FuncCall  go to state 32
    ID        go to state 33
    I         go to state 88
    J         go to state 39
    K         go to state 40
    L         go to state 41


State 65

   56 I: I '+' . J

    TK_LIT_INT        shift, and go to state 48
    TK_LIT_FLOAT      shift, and go to state 23
    TK_LIT_FALSE      shift, and go to state 24
    TK_LIT_TRUE       shift, and go to state 25
    TK_LIT_CHAR       shift, and go to state 26
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 27
    '-'               shift, and go to state 28
    '!'               shift, and go to state 29

    Lit       go to state 31
    FuncCall  go to state 32
    ID        go to state 33
    J         go to state 89
    K         go to state 40
    L         go to state 41


State 66

   57 I: I '-' . J

    TK_LIT_INT        shift, and go to state 48
    TK_LIT_FLOAT      shift, and go to state 23
    TK_LIT_FALSE      shift, and go to state 24
    TK_LIT_TRUE       shift, and go to state 25
    TK_LIT_CHAR       shift, and go to state 26
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 27
    '-'               shift, and go to state 28
    '!'               shift, and go to state 29

    Lit       go to state 31
    FuncCall  go to state 32
    ID        go to state 33
    J         go to state 90
    K         go to state 40
    L         go to state 41


State 67

   59 J: J '*' . K

    TK_LIT_INT        shift, and go to state 48
    TK_LIT_FLOAT      shift, and go to state 23
    TK_LIT_FALSE      shift, and go to state 24
    TK_LIT_TRUE       shift, and go to state 25
    TK_LIT_CHAR       shift, and go to state 26
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 27
    '-'               shift, and go to state 28
    '!'               shift, and go to state 29

    Lit       go to state 31
    FuncCall  go to state 32
    ID        go to state 33
    K         go to state 91
    L         go to state 41


State 68

   60 J: J '/' . K

    TK_LIT_INT        shift, and go to state 48
    TK_LIT_FLOAT      shift, and go to state 23
    TK_LIT_FALSE      shift, and go to state 24
    TK_LIT_TRUE       shift, and go to state 25
    TK_LIT_CHAR       shift, and go to state 26
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 27
    '-'               shift, and go to state 28
    '!'               shift, and go to state 29

    Lit       go to state 31
    FuncCall  go to state 32
    ID        go to state 33
    K         go to state 92
    L         go to state 41


State 69

   61 J: J '%' . K

    TK_LIT_INT        shift, and go to state 48
    TK_LIT_FLOAT      shift, and go to state 23
    TK_LIT_FALSE      shift, and go to state 24
    TK_LIT_TRUE       shift, and go to state 25
    TK_LIT_CHAR       shift, and go to state 26
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 27
    '-'               shift, and go to state 28
    '!'               shift, and go to state 29

    Lit       go to state 31
    FuncCall  go to state 32
    ID        go to state 33
    K         go to state 93
    L         go to state 41


State 70

   39 Atrib: ID '[' ExprList ']' . '=' Expr

    '='  shift, and go to state 94


State 71

   27 Param: Type ID .

    $default  reduce using rule 27 (Param)


State 72

   22 Func: ID '(' ParamList ')' . Block

    '{'  shift, and go to state 95

    Block  go to state 96


State 73

   26 ParamListEnd: ',' . Param ParamListEnd

    TK_PR_INT    shift, and go to state 1
    TK_PR_FLOAT  shift, and go to state 2
    TK_PR_BOOL   shift, and go to state 3
    TK_PR_CHAR   shift, and go to state 4

    Type   go to state 45
    Param  go to state 97


State 74

   24 ParamList: Param ParamListEnd .

    $default  reduce using rule 24 (ParamList)


State 75

   15 ArrayDimEnd: TK_LIT_INT . '^' ArrayDimEnd
   16            | TK_LIT_INT .

    '^'  shift, and go to state 98

    $default  reduce using rule 16 (ArrayDimEnd)


State 76

   14 ArrayDim: TK_LIT_INT '^' ArrayDimEnd .

    $default  reduce using rule 14 (ArrayDim)


State 77

   66 L: '(' Expr ')' .

    $default  reduce using rule 66 (L)


State 78

    5 Dec: Type ID '[' ArrayDim ']' ';' .

    $default  reduce using rule 5 (Dec)


State 79

   14 ArrayDim: TK_LIT_INT . '^' ArrayDimEnd

    '^'  shift, and go to state 50


State 80

   68 L: ID '[' ArrayDim . ']'

    ']'  shift, and go to state 99


State 81

   44 FuncCall: ID '(' ExprList . ')'

    ')'  shift, and go to state 100


State 82

   46 Expr: Expr TK_OC_OR T .
   48 T: T . TK_OC_AND F

    TK_OC_AND  shift, and go to state 60

    $default  reduce using rule 46 (Expr)


State 83

   46 Expr: Expr . TK_OC_OR T
   73 ExprListEnd: ',' Expr . ExprListEnd

    TK_OC_OR  shift, and go to state 57
    ','       shift, and go to state 58

    $default  reduce using rule 72 (ExprListEnd)

    ExprListEnd  go to state 101


State 84

   48 T: T TK_OC_AND F .
   50 F: F . TK_OC_EQ G
   51  | F . TK_OC_NE G

    TK_OC_EQ  shift, and go to state 61
    TK_OC_NE  shift, and go to state 62

    $default  reduce using rule 48 (T)


State 85

   50 F: F TK_OC_EQ G .
   53 G: G . TK_OC_LE I
   54  | G . TK_OC_GE I

    TK_OC_LE  shift, and go to state 63
    TK_OC_GE  shift, and go to state 64

    $default  reduce using rule 50 (F)


State 86

   51 F: F TK_OC_NE G .
   53 G: G . TK_OC_LE I
   54  | G . TK_OC_GE I

    TK_OC_LE  shift, and go to state 63
    TK_OC_GE  shift, and go to state 64

    $default  reduce using rule 51 (F)


State 87

   53 G: G TK_OC_LE I .
   56 I: I . '+' J
   57  | I . '-' J

    '+'  shift, and go to state 65
    '-'  shift, and go to state 66

    $default  reduce using rule 53 (G)


State 88

   54 G: G TK_OC_GE I .
   56 I: I . '+' J
   57  | I . '-' J

    '+'  shift, and go to state 65
    '-'  shift, and go to state 66

    $default  reduce using rule 54 (G)


State 89

   56 I: I '+' J .
   59 J: J . '*' K
   60  | J . '/' K
   61  | J . '%' K

    '*'  shift, and go to state 67
    '/'  shift, and go to state 68
    '%'  shift, and go to state 69

    $default  reduce using rule 56 (I)


State 90

   57 I: I '-' J .
   59 J: J . '*' K
   60  | J . '/' K
   61  | J . '%' K

    '*'  shift, and go to state 67
    '/'  shift, and go to state 68
    '%'  shift, and go to state 69

    $default  reduce using rule 57 (I)


State 91

   59 J: J '*' K .

    $default  reduce using rule 59 (J)


State 92

   60 J: J '/' K .

    $default  reduce using rule 60 (J)


State 93

   61 J: J '%' K .

    $default  reduce using rule 61 (J)


State 94

   39 Atrib: ID '[' ExprList ']' '=' . Expr

    TK_LIT_INT        shift, and go to state 48
    TK_LIT_FLOAT      shift, and go to state 23
    TK_LIT_FALSE      shift, and go to state 24
    TK_LIT_TRUE       shift, and go to state 25
    TK_LIT_CHAR       shift, and go to state 26
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 27
    '-'               shift, and go to state 28
    '!'               shift, and go to state 29

    Lit       go to state 31
    FuncCall  go to state 32
    ID        go to state 33
    Expr      go to state 102
    T         go to state 35
    F         go to state 36
    G         go to state 37
    I         go to state 38
    J         go to state 39
    K         go to state 40
    L         go to state 41


State 95

   28 Block: '{' . CommandList '}'

    TK_PR_INT         shift, and go to state 1
    TK_PR_FLOAT       shift, and go to state 2
    TK_PR_BOOL        shift, and go to state 3
    TK_PR_CHAR        shift, and go to state 4
    TK_PR_IF          shift, and go to state 103
    TK_PR_WHILE       shift, and go to state 104
    TK_PR_RETURN      shift, and go to state 105
    TK_IDENTIFICADOR  shift, and go to state 11

    $default  reduce using rule 32 (Command)

    Dec          go to state 106
    Type         go to state 8
    CommandList  go to state 107
    Command      go to state 108
    Atrib        go to state 109
    Flow         go to state 110
    Ret          go to state 111
    FuncCall     go to state 112
    ID           go to state 113


State 96

   22 Func: ID '(' ParamList ')' Block .

    $default  reduce using rule 22 (Func)


State 97

   26 ParamListEnd: ',' Param . ParamListEnd

    ','  shift, and go to state 73

    $default  reduce using rule 25 (ParamListEnd)

    ParamListEnd  go to state 114


State 98

   15 ArrayDimEnd: TK_LIT_INT '^' . ArrayDimEnd

    TK_LIT_INT  shift, and go to state 75

    ArrayDimEnd  go to state 115


State 99

   68 L: ID '[' ArrayDim ']' .

    $default  reduce using rule 68 (L)


State 100

   44 FuncCall: ID '(' ExprList ')' .

    $default  reduce using rule 44 (FuncCall)


State 101

   73 ExprListEnd: ',' Expr ExprListEnd .

    $default  reduce using rule 73 (ExprListEnd)


State 102

   39 Atrib: ID '[' ExprList ']' '=' Expr .
   46 Expr: Expr . TK_OC_OR T

    TK_OC_OR  shift, and go to state 57

    $default  reduce using rule 39 (Atrib)


State 103

   41 Flow: TK_PR_IF . '(' Expr ')' TK_PR_THEN Block
   42     | TK_PR_IF . '(' Expr ')' TK_PR_THEN Block TK_PR_ELSE Block

    '('  shift, and go to state 116


State 104

   40 Flow: TK_PR_WHILE . '(' Expr ')' Block

    '('  shift, and go to state 117


State 105

   43 Ret: TK_PR_RETURN . Expr

    TK_LIT_INT        shift, and go to state 48
    TK_LIT_FLOAT      shift, and go to state 23
    TK_LIT_FALSE      shift, and go to state 24
    TK_LIT_TRUE       shift, and go to state 25
    TK_LIT_CHAR       shift, and go to state 26
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 27
    '-'               shift, and go to state 28
    '!'               shift, and go to state 29

    Lit       go to state 31
    FuncCall  go to state 32
    ID        go to state 33
    Expr      go to state 118
    T         go to state 35
    F         go to state 36
    G         go to state 37
    I         go to state 38
    J         go to state 39
    K         go to state 40
    L         go to state 41


State 106

   35 Command: Dec .

    $default  reduce using rule 35 (Command)


State 107

   28 Block: '{' CommandList . '}'

    '}'  shift, and go to state 119


State 108

   29 CommandList: Command . CommandListEnd

    ';'  shift, and go to state 120

    $default  reduce using rule 30 (CommandListEnd)

    CommandListEnd  go to state 121


State 109

   34 Command: Atrib .

    $default  reduce using rule 34 (Command)


State 110

   33 Command: Flow .

    $default  reduce using rule 33 (Command)


State 111

   36 Command: Ret .

    $default  reduce using rule 36 (Command)


State 112

   37 Command: FuncCall .

    $default  reduce using rule 37 (Command)


State 113

   38 Atrib: ID . '=' Expr
   39      | ID . '[' ExprList ']' '=' Expr
   44 FuncCall: ID . '(' ExprList ')'

    '['  shift, and go to state 122
    '('  shift, and go to state 56
    '='  shift, and go to state 21


State 114

   26 ParamListEnd: ',' Param ParamListEnd .

    $default  reduce using rule 26 (ParamListEnd)


State 115

   15 ArrayDimEnd: TK_LIT_INT '^' ArrayDimEnd .

    $default  reduce using rule 15 (ArrayDimEnd)


State 116

   41 Flow: TK_PR_IF '(' . Expr ')' TK_PR_THEN Block
   42     | TK_PR_IF '(' . Expr ')' TK_PR_THEN Block TK_PR_ELSE Block

    TK_LIT_INT        shift, and go to state 48
    TK_LIT_FLOAT      shift, and go to state 23
    TK_LIT_FALSE      shift, and go to state 24
    TK_LIT_TRUE       shift, and go to state 25
    TK_LIT_CHAR       shift, and go to state 26
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 27
    '-'               shift, and go to state 28
    '!'               shift, and go to state 29

    Lit       go to state 31
    FuncCall  go to state 32
    ID        go to state 33
    Expr      go to state 123
    T         go to state 35
    F         go to state 36
    G         go to state 37
    I         go to state 38
    J         go to state 39
    K         go to state 40
    L         go to state 41


State 117

   40 Flow: TK_PR_WHILE '(' . Expr ')' Block

    TK_LIT_INT        shift, and go to state 48
    TK_LIT_FLOAT      shift, and go to state 23
    TK_LIT_FALSE      shift, and go to state 24
    TK_LIT_TRUE       shift, and go to state 25
    TK_LIT_CHAR       shift, and go to state 26
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 27
    '-'               shift, and go to state 28
    '!'               shift, and go to state 29

    Lit       go to state 31
    FuncCall  go to state 32
    ID        go to state 33
    Expr      go to state 124
    T         go to state 35
    F         go to state 36
    G         go to state 37
    I         go to state 38
    J         go to state 39
    K         go to state 40
    L         go to state 41


State 118

   43 Ret: TK_PR_RETURN Expr .
   46 Expr: Expr . TK_OC_OR T

    TK_OC_OR  shift, and go to state 57

    $default  reduce using rule 43 (Ret)


State 119

   28 Block: '{' CommandList '}' .

    $default  reduce using rule 28 (Block)


State 120

   31 CommandListEnd: ';' . Command CommandListEnd

    TK_PR_INT         shift, and go to state 1
    TK_PR_FLOAT       shift, and go to state 2
    TK_PR_BOOL        shift, and go to state 3
    TK_PR_CHAR        shift, and go to state 4
    TK_PR_IF          shift, and go to state 103
    TK_PR_WHILE       shift, and go to state 104
    TK_PR_RETURN      shift, and go to state 105
    TK_IDENTIFICADOR  shift, and go to state 11

    $default  reduce using rule 32 (Command)

    Dec       go to state 106
    Type      go to state 8
    Command   go to state 125
    Atrib     go to state 109
    Flow      go to state 110
    Ret       go to state 111
    FuncCall  go to state 112
    ID        go to state 113


State 121

   29 CommandList: Command CommandListEnd .

    $default  reduce using rule 29 (CommandList)


State 122

   39 Atrib: ID '[' . ExprList ']' '=' Expr

    TK_LIT_INT        shift, and go to state 48
    TK_LIT_FLOAT      shift, and go to state 23
    TK_LIT_FALSE      shift, and go to state 24
    TK_LIT_TRUE       shift, and go to state 25
    TK_LIT_CHAR       shift, and go to state 26
    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 27
    '-'               shift, and go to state 28
    '!'               shift, and go to state 29

    Lit       go to state 31
    FuncCall  go to state 32
    ID        go to state 33
    Expr      go to state 34
    T         go to state 35
    F         go to state 36
    G         go to state 37
    I         go to state 38
    J         go to state 39
    K         go to state 40
    L         go to state 41
    ExprList  go to state 42


State 123

   41 Flow: TK_PR_IF '(' Expr . ')' TK_PR_THEN Block
   42     | TK_PR_IF '(' Expr . ')' TK_PR_THEN Block TK_PR_ELSE Block
   46 Expr: Expr . TK_OC_OR T

    TK_OC_OR  shift, and go to state 57
    ')'       shift, and go to state 126


State 124

   40 Flow: TK_PR_WHILE '(' Expr . ')' Block
   46 Expr: Expr . TK_OC_OR T

    TK_OC_OR  shift, and go to state 57
    ')'       shift, and go to state 127


State 125

   31 CommandListEnd: ';' Command . CommandListEnd

    ';'  shift, and go to state 120

    $default  reduce using rule 30 (CommandListEnd)

    CommandListEnd  go to state 128


State 126

   41 Flow: TK_PR_IF '(' Expr ')' . TK_PR_THEN Block
   42     | TK_PR_IF '(' Expr ')' . TK_PR_THEN Block TK_PR_ELSE Block

    TK_PR_THEN  shift, and go to state 129


State 127

   40 Flow: TK_PR_WHILE '(' Expr ')' . Block

    '{'  shift, and go to state 95

    Block  go to state 130


State 128

   31 CommandListEnd: ';' Command CommandListEnd .

    $default  reduce using rule 31 (CommandListEnd)


State 129

   41 Flow: TK_PR_IF '(' Expr ')' TK_PR_THEN . Block
   42     | TK_PR_IF '(' Expr ')' TK_PR_THEN . Block TK_PR_ELSE Block

    '{'  shift, and go to state 95

    Block  go to state 131


State 130

   40 Flow: TK_PR_WHILE '(' Expr ')' Block .

    $default  reduce using rule 40 (Flow)


State 131

   41 Flow: TK_PR_IF '(' Expr ')' TK_PR_THEN Block .
   42     | TK_PR_IF '(' Expr ')' TK_PR_THEN Block . TK_PR_ELSE Block

    TK_PR_ELSE  shift, and go to state 132

    $default  reduce using rule 41 (Flow)


State 132

   42 Flow: TK_PR_IF '(' Expr ')' TK_PR_THEN Block TK_PR_ELSE . Block

    '{'  shift, and go to state 95

    Block  go to state 133


State 133

   42 Flow: TK_PR_IF '(' Expr ')' TK_PR_THEN Block TK_PR_ELSE Block .

    $default  reduce using rule 42 (Flow)
