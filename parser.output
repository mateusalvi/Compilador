Terminals unused in grammar

    TK_PR_INPUT
    TK_PR_OUTPUT
    TK_PR_FOR
    TK_LIT_FLOAT
    TK_LIT_FALSE
    TK_LIT_TRUE
    TK_LIT_CHAR
    TK_ERRO


Grammar

    0 $accept: Program $end

    1 Program: DecList

    2 DecList: Dec DecList
    3        | %empty

    4 Dec: Type VarList ';'
    5    | Type '[' ArrayDim ']' ';'
    6    | Type Atrib ';'
    7    | Type Func

    8 Type: TK_PR_INT
    9     | TK_PR_FLOAT
   10     | TK_PR_BOOL
   11     | TK_PR_CHAR

   12 VarList: ID ',' VarList
   13        | ID

   14 ArrayDim: TK_LIT_INT ArrayDimEnd

   15 ArrayDimEnd: %empty
   16            | '^' TK_LIT_INT ArrayDimEnd

   17 Func: ID '(' ParamList ')' Block

   18 ParamList: %empty
   19          | Param ParamListEnd

   20 ParamListEnd: %empty
   21             | ',' Param ParamListEnd

   22 Param: Type ID

   23 Block: '{' CommandList '}'

   24 CommandList: Command CommandListEnd

   25 CommandListEnd: %empty
   26               | ';' Command CommandListEnd

   27 Command: %empty
   28        | Dec
   29        | Atrib
   30        | Flow
   31        | Ret
   32        | Block
   33        | FuncCall

   34 Atrib: ID TK_OC_EQ Expr
   35      | ID TK_OC_EQ '[' ArrayDim ']'
   36      | ID '[' ArrayDim ']' TK_OC_EQ Expr

   37 Flow: TK_PR_IF '(' Expr ')' TK_PR_THEN Command TK_PR_ELSE Command
   38     | TK_PR_WHILE '(' Expr ')' Block

   39 Ret: TK_PR_RETURN Expr

   40 FuncCall: ID '(' ExprList ')'

   41 ID: TK_IDENTIFICADOR

   42 Expr: Expr TK_OC_OR T
   43     | T

   44 T: T TK_OC_AND F
   45  | F

   46 F: F TK_OC_EQ G
   47  | F TK_OC_NE G
   48  | G

   49 G: G TK_OC_LE I
   50  | G TK_OC_GE I
   51  | I

   52 I: I '+' J
   53  | I '-' J
   54  | J

   55 J: J '*' K
   56  | J '/' K
   57  | J '%' K
   58  | K

   59 K: '-' L
   60  | '!' L

   61 L: '(' Expr ')'
   62  | ID
   63  | FuncCall

   64 ExprList: Expr ExprListEnd

   65 ExprListEnd: %empty
   66            | ',' Expr ExprListEnd


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 60
    '%' (37) 57
    '(' (40) 17 37 38 40 61
    ')' (41) 17 37 38 40 61
    '*' (42) 55
    '+' (43) 52
    ',' (44) 12 21 66
    '-' (45) 53 59
    '/' (47) 56
    ';' (59) 4 5 6 26
    '[' (91) 5 35 36
    ']' (93) 5 35 36
    '^' (94) 16
    '{' (123) 23
    '}' (125) 23
    error (256)
    TK_PR_INT (258) 8
    TK_PR_FLOAT (259) 9
    TK_PR_BOOL (260) 10
    TK_PR_CHAR (261) 11
    TK_PR_IF (262) 37
    TK_PR_THEN (263) 37
    TK_PR_ELSE (264) 37
    TK_PR_WHILE (265) 38
    TK_PR_INPUT (266)
    TK_PR_OUTPUT (267)
    TK_PR_RETURN (268) 39
    TK_PR_FOR (269)
    TK_OC_LE (270) 49
    TK_OC_GE (271) 50
    TK_OC_EQ (272) 34 35 36 46
    TK_OC_NE (273) 47
    TK_OC_AND (274) 44
    TK_OC_OR (275) 42
    TK_LIT_INT (276) 14 16
    TK_LIT_FLOAT (277)
    TK_LIT_FALSE (278)
    TK_LIT_TRUE (279)
    TK_LIT_CHAR (280)
    TK_IDENTIFICADOR (281) 41
    TK_ERRO (282)


Nonterminals, with rules where they appear

    $accept (43)
        on left: 0
    Program (44)
        on left: 1
        on right: 0
    DecList (45)
        on left: 2 3
        on right: 1 2
    Dec (46)
        on left: 4 5 6 7
        on right: 2 28
    Type (47)
        on left: 8 9 10 11
        on right: 4 5 6 7 22
    VarList (48)
        on left: 12 13
        on right: 4 12
    ArrayDim (49)
        on left: 14
        on right: 5 35 36
    ArrayDimEnd (50)
        on left: 15 16
        on right: 14 16
    Func (51)
        on left: 17
        on right: 7
    ParamList (52)
        on left: 18 19
        on right: 17
    ParamListEnd (53)
        on left: 20 21
        on right: 19 21
    Param (54)
        on left: 22
        on right: 19 21
    Block (55)
        on left: 23
        on right: 17 32 38
    CommandList (56)
        on left: 24
        on right: 23
    CommandListEnd (57)
        on left: 25 26
        on right: 24 26
    Command (58)
        on left: 27 28 29 30 31 32 33
        on right: 24 26 37
    Atrib (59)
        on left: 34 35 36
        on right: 6 29
    Flow (60)
        on left: 37 38
        on right: 30
    Ret (61)
        on left: 39
        on right: 31
    FuncCall (62)
        on left: 40
        on right: 33 63
    ID (63)
        on left: 41
        on right: 12 13 17 22 34 35 36 40 62
    Expr (64)
        on left: 42 43
        on right: 34 36 37 38 39 42 61 64 66
    T (65)
        on left: 44 45
        on right: 42 43 44
    F (66)
        on left: 46 47 48
        on right: 44 45 46 47
    G (67)
        on left: 49 50 51
        on right: 46 47 48 49 50
    I (68)
        on left: 52 53 54
        on right: 49 50 51 52 53
    J (69)
        on left: 55 56 57 58
        on right: 52 53 54 55 56 57
    K (70)
        on left: 59 60
        on right: 55 56 57 58
    L (71)
        on left: 61 62 63
        on right: 59 60
    ExprList (72)
        on left: 64
        on right: 40
    ExprListEnd (73)
        on left: 65 66
        on right: 64 66


State 0

    0 $accept: . Program $end

    TK_PR_INT    shift, and go to state 1
    TK_PR_FLOAT  shift, and go to state 2
    TK_PR_BOOL   shift, and go to state 3
    TK_PR_CHAR   shift, and go to state 4

    $default  reduce using rule 3 (DecList)

    Program  go to state 5
    DecList  go to state 6
    Dec      go to state 7
    Type     go to state 8


State 1

    8 Type: TK_PR_INT .

    $default  reduce using rule 8 (Type)


State 2

    9 Type: TK_PR_FLOAT .

    $default  reduce using rule 9 (Type)


State 3

   10 Type: TK_PR_BOOL .

    $default  reduce using rule 10 (Type)


State 4

   11 Type: TK_PR_CHAR .

    $default  reduce using rule 11 (Type)


State 5

    0 $accept: Program . $end

    $end  shift, and go to state 9


State 6

    1 Program: DecList .

    $default  reduce using rule 1 (Program)


State 7

    2 DecList: Dec . DecList

    TK_PR_INT    shift, and go to state 1
    TK_PR_FLOAT  shift, and go to state 2
    TK_PR_BOOL   shift, and go to state 3
    TK_PR_CHAR   shift, and go to state 4

    $default  reduce using rule 3 (DecList)

    DecList  go to state 10
    Dec      go to state 7
    Type     go to state 8


State 8

    4 Dec: Type . VarList ';'
    5    | Type . '[' ArrayDim ']' ';'
    6    | Type . Atrib ';'
    7    | Type . Func

    TK_IDENTIFICADOR  shift, and go to state 11
    '['               shift, and go to state 12

    VarList  go to state 13
    Func     go to state 14
    Atrib    go to state 15
    ID       go to state 16


State 9

    0 $accept: Program $end .

    $default  accept


State 10

    2 DecList: Dec DecList .

    $default  reduce using rule 2 (DecList)


State 11

   41 ID: TK_IDENTIFICADOR .

    $default  reduce using rule 41 (ID)


State 12

    5 Dec: Type '[' . ArrayDim ']' ';'

    TK_LIT_INT  shift, and go to state 17

    ArrayDim  go to state 18


State 13

    4 Dec: Type VarList . ';'

    ';'  shift, and go to state 19


State 14

    7 Dec: Type Func .

    $default  reduce using rule 7 (Dec)


State 15

    6 Dec: Type Atrib . ';'

    ';'  shift, and go to state 20


State 16

   12 VarList: ID . ',' VarList
   13        | ID .
   17 Func: ID . '(' ParamList ')' Block
   34 Atrib: ID . TK_OC_EQ Expr
   35      | ID . TK_OC_EQ '[' ArrayDim ']'
   36      | ID . '[' ArrayDim ']' TK_OC_EQ Expr

    TK_OC_EQ  shift, and go to state 21
    '['       shift, and go to state 22
    ','       shift, and go to state 23
    '('       shift, and go to state 24

    $default  reduce using rule 13 (VarList)


State 17

   14 ArrayDim: TK_LIT_INT . ArrayDimEnd

    '^'  shift, and go to state 25

    $default  reduce using rule 15 (ArrayDimEnd)

    ArrayDimEnd  go to state 26


State 18

    5 Dec: Type '[' ArrayDim . ']' ';'

    ']'  shift, and go to state 27


State 19

    4 Dec: Type VarList ';' .

    $default  reduce using rule 4 (Dec)


State 20

    6 Dec: Type Atrib ';' .

    $default  reduce using rule 6 (Dec)


State 21

   34 Atrib: ID TK_OC_EQ . Expr
   35      | ID TK_OC_EQ . '[' ArrayDim ']'

    '['  shift, and go to state 28
    '-'  shift, and go to state 29
    '!'  shift, and go to state 30

    Expr  go to state 31
    T     go to state 32
    F     go to state 33
    G     go to state 34
    I     go to state 35
    J     go to state 36
    K     go to state 37


State 22

   36 Atrib: ID '[' . ArrayDim ']' TK_OC_EQ Expr

    TK_LIT_INT  shift, and go to state 17

    ArrayDim  go to state 38


State 23

   12 VarList: ID ',' . VarList

    TK_IDENTIFICADOR  shift, and go to state 11

    VarList  go to state 39
    ID       go to state 40


State 24

   17 Func: ID '(' . ParamList ')' Block

    TK_PR_INT    shift, and go to state 1
    TK_PR_FLOAT  shift, and go to state 2
    TK_PR_BOOL   shift, and go to state 3
    TK_PR_CHAR   shift, and go to state 4

    $default  reduce using rule 18 (ParamList)

    Type       go to state 41
    ParamList  go to state 42
    Param      go to state 43


State 25

   16 ArrayDimEnd: '^' . TK_LIT_INT ArrayDimEnd

    TK_LIT_INT  shift, and go to state 44


State 26

   14 ArrayDim: TK_LIT_INT ArrayDimEnd .

    $default  reduce using rule 14 (ArrayDim)


State 27

    5 Dec: Type '[' ArrayDim ']' . ';'

    ';'  shift, and go to state 45


State 28

   35 Atrib: ID TK_OC_EQ '[' . ArrayDim ']'

    TK_LIT_INT  shift, and go to state 17

    ArrayDim  go to state 46


State 29

   59 K: '-' . L

    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 47

    FuncCall  go to state 48
    ID        go to state 49
    L         go to state 50


State 30

   60 K: '!' . L

    TK_IDENTIFICADOR  shift, and go to state 11
    '('               shift, and go to state 47

    FuncCall  go to state 48
    ID        go to state 49
    L         go to state 51


State 31

   34 Atrib: ID TK_OC_EQ Expr .
   42 Expr: Expr . TK_OC_OR T

    TK_OC_OR  shift, and go to state 52

    $default  reduce using rule 34 (Atrib)


State 32

   43 Expr: T .
   44 T: T . TK_OC_AND F

    TK_OC_AND  shift, and go to state 53

    $default  reduce using rule 43 (Expr)


State 33

   45 T: F .
   46 F: F . TK_OC_EQ G
   47  | F . TK_OC_NE G

    TK_OC_EQ  shift, and go to state 54
    TK_OC_NE  shift, and go to state 55

    $default  reduce using rule 45 (T)


State 34

   48 F: G .
   49 G: G . TK_OC_LE I
   50  | G . TK_OC_GE I

    TK_OC_LE  shift, and go to state 56
    TK_OC_GE  shift, and go to state 57

    $default  reduce using rule 48 (F)


State 35

   51 G: I .
   52 I: I . '+' J
   53  | I . '-' J

    '+'  shift, and go to state 58
    '-'  shift, and go to state 59

    $default  reduce using rule 51 (G)


State 36

   54 I: J .
   55 J: J . '*' K
   56  | J . '/' K
   57  | J . '%' K

    '*'  shift, and go to state 60
    '/'  shift, and go to state 61
    '%'  shift, and go to state 62

    $default  reduce using rule 54 (I)


State 37

   58 J: K .

    $default  reduce using rule 58 (J)


State 38

   36 Atrib: ID '[' ArrayDim . ']' TK_OC_EQ Expr

    ']'  shift, and go to state 63


State 39

   12 VarList: ID ',' VarList .

    $default  reduce using rule 12 (VarList)


State 40

   12 VarList: ID . ',' VarList
   13        | ID .

    ','  shift, and go to state 23

    $default  reduce using rule 13 (VarList)


State 41

   22 Param: Type . ID

    TK_IDENTIFICADOR  shift, and go to state 11

    ID  go to state 64


State 42

   17 Func: ID '(' ParamList . ')' Block

    ')'  shift, and go to state 65


State 43

   19 ParamList: Param . ParamListEnd

    ','  shift, and go to state 66

    $default  reduce using rule 20 (ParamListEnd)

    ParamListEnd  go to state 67


State 44

   16 ArrayDimEnd: '^' TK_LIT_INT . ArrayDimEnd

    '^'  shift, and go to state 25

    $default  reduce using rule 15 (ArrayDimEnd)

    ArrayDimEnd  go to state 68


State 45

    5 Dec: Type '[' ArrayDim ']' ';' .

    $default  reduce using rule 5 (Dec)


State 46

   35 Atrib: ID TK_OC_EQ '[' ArrayDim . ']'

    ']'  shift, and go to state 69


State 47

   61 L: '(' . Expr ')'

    '-'  shift, and go to state 29
    '!'  shift, and go to state 30

    Expr  go to state 70
    T     go to state 32
    F     go to state 33
    G     go to state 34
    I     go to state 35
    J     go to state 36
    K     go to state 37


State 48

   63 L: FuncCall .

    $default  reduce using rule 63 (L)


State 49

   40 FuncCall: ID . '(' ExprList ')'
   62 L: ID .

    '('  shift, and go to state 71

    $default  reduce using rule 62 (L)


State 50

   59 K: '-' L .

    $default  reduce using rule 59 (K)


State 51

   60 K: '!' L .

    $default  reduce using rule 60 (K)


State 52

   42 Expr: Expr TK_OC_OR . T

    '-'  shift, and go to state 29
    '!'  shift, and go to state 30

    T  go to state 72
    F  go to state 33
    G  go to state 34
    I  go to state 35
    J  go to state 36
    K  go to state 37


State 53

   44 T: T TK_OC_AND . F

    '-'  shift, and go to state 29
    '!'  shift, and go to state 30

    F  go to state 73
    G  go to state 34
    I  go to state 35
    J  go to state 36
    K  go to state 37


State 54

   46 F: F TK_OC_EQ . G

    '-'  shift, and go to state 29
    '!'  shift, and go to state 30

    G  go to state 74
    I  go to state 35
    J  go to state 36
    K  go to state 37


State 55

   47 F: F TK_OC_NE . G

    '-'  shift, and go to state 29
    '!'  shift, and go to state 30

    G  go to state 75
    I  go to state 35
    J  go to state 36
    K  go to state 37


State 56

   49 G: G TK_OC_LE . I

    '-'  shift, and go to state 29
    '!'  shift, and go to state 30

    I  go to state 76
    J  go to state 36
    K  go to state 37


State 57

   50 G: G TK_OC_GE . I

    '-'  shift, and go to state 29
    '!'  shift, and go to state 30

    I  go to state 77
    J  go to state 36
    K  go to state 37


State 58

   52 I: I '+' . J

    '-'  shift, and go to state 29
    '!'  shift, and go to state 30

    J  go to state 78
    K  go to state 37


State 59

   53 I: I '-' . J

    '-'  shift, and go to state 29
    '!'  shift, and go to state 30

    J  go to state 79
    K  go to state 37


State 60

   55 J: J '*' . K

    '-'  shift, and go to state 29
    '!'  shift, and go to state 30

    K  go to state 80


State 61

   56 J: J '/' . K

    '-'  shift, and go to state 29
    '!'  shift, and go to state 30

    K  go to state 81


State 62

   57 J: J '%' . K

    '-'  shift, and go to state 29
    '!'  shift, and go to state 30

    K  go to state 82


State 63

   36 Atrib: ID '[' ArrayDim ']' . TK_OC_EQ Expr

    TK_OC_EQ  shift, and go to state 83


State 64

   22 Param: Type ID .

    $default  reduce using rule 22 (Param)


State 65

   17 Func: ID '(' ParamList ')' . Block

    '{'  shift, and go to state 84

    Block  go to state 85


State 66

   21 ParamListEnd: ',' . Param ParamListEnd

    TK_PR_INT    shift, and go to state 1
    TK_PR_FLOAT  shift, and go to state 2
    TK_PR_BOOL   shift, and go to state 3
    TK_PR_CHAR   shift, and go to state 4

    Type   go to state 41
    Param  go to state 86


State 67

   19 ParamList: Param ParamListEnd .

    $default  reduce using rule 19 (ParamList)


State 68

   16 ArrayDimEnd: '^' TK_LIT_INT ArrayDimEnd .

    $default  reduce using rule 16 (ArrayDimEnd)


State 69

   35 Atrib: ID TK_OC_EQ '[' ArrayDim ']' .

    $default  reduce using rule 35 (Atrib)


State 70

   42 Expr: Expr . TK_OC_OR T
   61 L: '(' Expr . ')'

    TK_OC_OR  shift, and go to state 52
    ')'       shift, and go to state 87


State 71

   40 FuncCall: ID '(' . ExprList ')'

    '-'  shift, and go to state 29
    '!'  shift, and go to state 30

    Expr      go to state 88
    T         go to state 32
    F         go to state 33
    G         go to state 34
    I         go to state 35
    J         go to state 36
    K         go to state 37
    ExprList  go to state 89


State 72

   42 Expr: Expr TK_OC_OR T .
   44 T: T . TK_OC_AND F

    TK_OC_AND  shift, and go to state 53

    $default  reduce using rule 42 (Expr)


State 73

   44 T: T TK_OC_AND F .
   46 F: F . TK_OC_EQ G
   47  | F . TK_OC_NE G

    TK_OC_EQ  shift, and go to state 54
    TK_OC_NE  shift, and go to state 55

    $default  reduce using rule 44 (T)


State 74

   46 F: F TK_OC_EQ G .
   49 G: G . TK_OC_LE I
   50  | G . TK_OC_GE I

    TK_OC_LE  shift, and go to state 56
    TK_OC_GE  shift, and go to state 57

    $default  reduce using rule 46 (F)


State 75

   47 F: F TK_OC_NE G .
   49 G: G . TK_OC_LE I
   50  | G . TK_OC_GE I

    TK_OC_LE  shift, and go to state 56
    TK_OC_GE  shift, and go to state 57

    $default  reduce using rule 47 (F)


State 76

   49 G: G TK_OC_LE I .
   52 I: I . '+' J
   53  | I . '-' J

    '+'  shift, and go to state 58
    '-'  shift, and go to state 59

    $default  reduce using rule 49 (G)


State 77

   50 G: G TK_OC_GE I .
   52 I: I . '+' J
   53  | I . '-' J

    '+'  shift, and go to state 58
    '-'  shift, and go to state 59

    $default  reduce using rule 50 (G)


State 78

   52 I: I '+' J .
   55 J: J . '*' K
   56  | J . '/' K
   57  | J . '%' K

    '*'  shift, and go to state 60
    '/'  shift, and go to state 61
    '%'  shift, and go to state 62

    $default  reduce using rule 52 (I)


State 79

   53 I: I '-' J .
   55 J: J . '*' K
   56  | J . '/' K
   57  | J . '%' K

    '*'  shift, and go to state 60
    '/'  shift, and go to state 61
    '%'  shift, and go to state 62

    $default  reduce using rule 53 (I)


State 80

   55 J: J '*' K .

    $default  reduce using rule 55 (J)


State 81

   56 J: J '/' K .

    $default  reduce using rule 56 (J)


State 82

   57 J: J '%' K .

    $default  reduce using rule 57 (J)


State 83

   36 Atrib: ID '[' ArrayDim ']' TK_OC_EQ . Expr

    '-'  shift, and go to state 29
    '!'  shift, and go to state 30

    Expr  go to state 90
    T     go to state 32
    F     go to state 33
    G     go to state 34
    I     go to state 35
    J     go to state 36
    K     go to state 37


State 84

   23 Block: '{' . CommandList '}'

    TK_PR_INT         shift, and go to state 1
    TK_PR_FLOAT       shift, and go to state 2
    TK_PR_BOOL        shift, and go to state 3
    TK_PR_CHAR        shift, and go to state 4
    TK_PR_IF          shift, and go to state 91
    TK_PR_WHILE       shift, and go to state 92
    TK_PR_RETURN      shift, and go to state 93
    TK_IDENTIFICADOR  shift, and go to state 11
    '{'               shift, and go to state 84

    $default  reduce using rule 27 (Command)

    Dec          go to state 94
    Type         go to state 8
    Block        go to state 95
    CommandList  go to state 96
    Command      go to state 97
    Atrib        go to state 98
    Flow         go to state 99
    Ret          go to state 100
    FuncCall     go to state 101
    ID           go to state 102


State 85

   17 Func: ID '(' ParamList ')' Block .

    $default  reduce using rule 17 (Func)


State 86

   21 ParamListEnd: ',' Param . ParamListEnd

    ','  shift, and go to state 66

    $default  reduce using rule 20 (ParamListEnd)

    ParamListEnd  go to state 103


State 87

   61 L: '(' Expr ')' .

    $default  reduce using rule 61 (L)


State 88

   42 Expr: Expr . TK_OC_OR T
   64 ExprList: Expr . ExprListEnd

    TK_OC_OR  shift, and go to state 52
    ','       shift, and go to state 104

    $default  reduce using rule 65 (ExprListEnd)

    ExprListEnd  go to state 105


State 89

   40 FuncCall: ID '(' ExprList . ')'

    ')'  shift, and go to state 106


State 90

   36 Atrib: ID '[' ArrayDim ']' TK_OC_EQ Expr .
   42 Expr: Expr . TK_OC_OR T

    TK_OC_OR  shift, and go to state 52

    $default  reduce using rule 36 (Atrib)


State 91

   37 Flow: TK_PR_IF . '(' Expr ')' TK_PR_THEN Command TK_PR_ELSE Command

    '('  shift, and go to state 107


State 92

   38 Flow: TK_PR_WHILE . '(' Expr ')' Block

    '('  shift, and go to state 108


State 93

   39 Ret: TK_PR_RETURN . Expr

    '-'  shift, and go to state 29
    '!'  shift, and go to state 30

    Expr  go to state 109
    T     go to state 32
    F     go to state 33
    G     go to state 34
    I     go to state 35
    J     go to state 36
    K     go to state 37


State 94

   28 Command: Dec .

    $default  reduce using rule 28 (Command)


State 95

   32 Command: Block .

    $default  reduce using rule 32 (Command)


State 96

   23 Block: '{' CommandList . '}'

    '}'  shift, and go to state 110


State 97

   24 CommandList: Command . CommandListEnd

    ';'  shift, and go to state 111

    $default  reduce using rule 25 (CommandListEnd)

    CommandListEnd  go to state 112


State 98

   29 Command: Atrib .

    $default  reduce using rule 29 (Command)


State 99

   30 Command: Flow .

    $default  reduce using rule 30 (Command)


State 100

   31 Command: Ret .

    $default  reduce using rule 31 (Command)


State 101

   33 Command: FuncCall .

    $default  reduce using rule 33 (Command)


State 102

   34 Atrib: ID . TK_OC_EQ Expr
   35      | ID . TK_OC_EQ '[' ArrayDim ']'
   36      | ID . '[' ArrayDim ']' TK_OC_EQ Expr
   40 FuncCall: ID . '(' ExprList ')'

    TK_OC_EQ  shift, and go to state 21
    '['       shift, and go to state 22
    '('       shift, and go to state 71


State 103

   21 ParamListEnd: ',' Param ParamListEnd .

    $default  reduce using rule 21 (ParamListEnd)


State 104

   66 ExprListEnd: ',' . Expr ExprListEnd

    '-'  shift, and go to state 29
    '!'  shift, and go to state 30

    Expr  go to state 113
    T     go to state 32
    F     go to state 33
    G     go to state 34
    I     go to state 35
    J     go to state 36
    K     go to state 37


State 105

   64 ExprList: Expr ExprListEnd .

    $default  reduce using rule 64 (ExprList)


State 106

   40 FuncCall: ID '(' ExprList ')' .

    $default  reduce using rule 40 (FuncCall)


State 107

   37 Flow: TK_PR_IF '(' . Expr ')' TK_PR_THEN Command TK_PR_ELSE Command

    '-'  shift, and go to state 29
    '!'  shift, and go to state 30

    Expr  go to state 114
    T     go to state 32
    F     go to state 33
    G     go to state 34
    I     go to state 35
    J     go to state 36
    K     go to state 37


State 108

   38 Flow: TK_PR_WHILE '(' . Expr ')' Block

    '-'  shift, and go to state 29
    '!'  shift, and go to state 30

    Expr  go to state 115
    T     go to state 32
    F     go to state 33
    G     go to state 34
    I     go to state 35
    J     go to state 36
    K     go to state 37


State 109

   39 Ret: TK_PR_RETURN Expr .
   42 Expr: Expr . TK_OC_OR T

    TK_OC_OR  shift, and go to state 52

    $default  reduce using rule 39 (Ret)


State 110

   23 Block: '{' CommandList '}' .

    $default  reduce using rule 23 (Block)


State 111

   26 CommandListEnd: ';' . Command CommandListEnd

    TK_PR_INT         shift, and go to state 1
    TK_PR_FLOAT       shift, and go to state 2
    TK_PR_BOOL        shift, and go to state 3
    TK_PR_CHAR        shift, and go to state 4
    TK_PR_IF          shift, and go to state 91
    TK_PR_WHILE       shift, and go to state 92
    TK_PR_RETURN      shift, and go to state 93
    TK_IDENTIFICADOR  shift, and go to state 11
    '{'               shift, and go to state 84

    $default  reduce using rule 27 (Command)

    Dec       go to state 94
    Type      go to state 8
    Block     go to state 95
    Command   go to state 116
    Atrib     go to state 98
    Flow      go to state 99
    Ret       go to state 100
    FuncCall  go to state 101
    ID        go to state 102


State 112

   24 CommandList: Command CommandListEnd .

    $default  reduce using rule 24 (CommandList)


State 113

   42 Expr: Expr . TK_OC_OR T
   66 ExprListEnd: ',' Expr . ExprListEnd

    TK_OC_OR  shift, and go to state 52
    ','       shift, and go to state 104

    $default  reduce using rule 65 (ExprListEnd)

    ExprListEnd  go to state 117


State 114

   37 Flow: TK_PR_IF '(' Expr . ')' TK_PR_THEN Command TK_PR_ELSE Command
   42 Expr: Expr . TK_OC_OR T

    TK_OC_OR  shift, and go to state 52
    ')'       shift, and go to state 118


State 115

   38 Flow: TK_PR_WHILE '(' Expr . ')' Block
   42 Expr: Expr . TK_OC_OR T

    TK_OC_OR  shift, and go to state 52
    ')'       shift, and go to state 119


State 116

   26 CommandListEnd: ';' Command . CommandListEnd

    ';'  shift, and go to state 111

    $default  reduce using rule 25 (CommandListEnd)

    CommandListEnd  go to state 120


State 117

   66 ExprListEnd: ',' Expr ExprListEnd .

    $default  reduce using rule 66 (ExprListEnd)


State 118

   37 Flow: TK_PR_IF '(' Expr ')' . TK_PR_THEN Command TK_PR_ELSE Command

    TK_PR_THEN  shift, and go to state 121


State 119

   38 Flow: TK_PR_WHILE '(' Expr ')' . Block

    '{'  shift, and go to state 84

    Block  go to state 122


State 120

   26 CommandListEnd: ';' Command CommandListEnd .

    $default  reduce using rule 26 (CommandListEnd)


State 121

   37 Flow: TK_PR_IF '(' Expr ')' TK_PR_THEN . Command TK_PR_ELSE Command

    TK_PR_INT         shift, and go to state 1
    TK_PR_FLOAT       shift, and go to state 2
    TK_PR_BOOL        shift, and go to state 3
    TK_PR_CHAR        shift, and go to state 4
    TK_PR_IF          shift, and go to state 91
    TK_PR_WHILE       shift, and go to state 92
    TK_PR_RETURN      shift, and go to state 93
    TK_IDENTIFICADOR  shift, and go to state 11
    '{'               shift, and go to state 84

    $default  reduce using rule 27 (Command)

    Dec       go to state 94
    Type      go to state 8
    Block     go to state 95
    Command   go to state 123
    Atrib     go to state 98
    Flow      go to state 99
    Ret       go to state 100
    FuncCall  go to state 101
    ID        go to state 102


State 122

   38 Flow: TK_PR_WHILE '(' Expr ')' Block .

    $default  reduce using rule 38 (Flow)


State 123

   37 Flow: TK_PR_IF '(' Expr ')' TK_PR_THEN Command . TK_PR_ELSE Command

    TK_PR_ELSE  shift, and go to state 124


State 124

   37 Flow: TK_PR_IF '(' Expr ')' TK_PR_THEN Command TK_PR_ELSE . Command

    TK_PR_INT         shift, and go to state 1
    TK_PR_FLOAT       shift, and go to state 2
    TK_PR_BOOL        shift, and go to state 3
    TK_PR_CHAR        shift, and go to state 4
    TK_PR_IF          shift, and go to state 91
    TK_PR_WHILE       shift, and go to state 92
    TK_PR_RETURN      shift, and go to state 93
    TK_IDENTIFICADOR  shift, and go to state 11
    '{'               shift, and go to state 84

    $default  reduce using rule 27 (Command)

    Dec       go to state 94
    Type      go to state 8
    Block     go to state 95
    Command   go to state 125
    Atrib     go to state 98
    Flow      go to state 99
    Ret       go to state 100
    FuncCall  go to state 101
    ID        go to state 102


State 125

   37 Flow: TK_PR_IF '(' Expr ')' TK_PR_THEN Command TK_PR_ELSE Command .

    $default  reduce using rule 37 (Flow)
