Nonterminals useless in grammar

    VarDec
    Type
    VarList
    Array
    LitList
    Lit
    Param
    Atrib
    Flow
    Ret
    Expr
    E
    T
    F
    G
    I
    J
    K
    L


Terminals unused in grammar

    TK_PR_IF
    TK_PR_THEN
    TK_PR_ELSE
    TK_PR_WHILE
    TK_PR_INPUT
    TK_PR_OUTPUT
    TK_PR_RETURN
    TK_PR_FOR
    TK_OC_LE
    TK_OC_GE
    TK_OC_EQ
    TK_OC_NE
    TK_OC_AND
    TK_OC_OR
    TK_LIT_INT
    TK_LIT_FLOAT
    TK_LIT_FALSE
    TK_LIT_TRUE
    TK_LIT_CHAR
    TK_ERRO
    ','
    '['
    ']'
    "return"
    '+'
    '-'
    '*'
    '/'
    '%'
    '!'


Rules useless in grammar

   19 VarDecList: VarDec VarDecList

   20 VarDec: Type VarList ';'

   21 Type: Type TK_PR_INT
   22     | Type TK_PR_FLOAT
   23     | Type TK_PR_BOOL
   24     | Type TK_PR_CHAR

   25 VarList: ID Array
   26        | ID ',' VarList

   27 Array: '[' LitList ']'

   28 LitList: Lit ',' LitList
   29        | Lit

   30 Lit: TK_LIT_INT
   31    | TK_LIT_FLOAT
   32    | TK_LIT_FALSE
   33    | TK_LIT_TRUE
   34    | TK_LIT_CHAR

   35 ParamList: Param
   36          | Param ',' ParamList

   37 Param: Type ID

   38 Command: VarDec
   39        | Atrib
   40        | Flow
   41        | Ret

   42 Atrib: ID Array TK_OC_EQ Expr

   43 Flow: TK_PR_IF '(' Expr ')' Command TK_PR_ELSE Command

   44 Ret: "return" Expr

   45 ExprList: Expr ',' ExprList
   46         | Expr

   47 Expr: E

   48 E: E TK_OC_OR T
   49  | T

   50 T: T TK_OC_AND F
   51  | F

   52 F: F TK_OC_EQ G
   53  | F TK_OC_NE G
   54  | G

   55 G: G TK_OC_LE I
   56  | G TK_OC_GE I
   57  | I

   58 I: I '+' J
   59  | I '-' J
   60  | J

   61 J: J '*' K
   62  | J '/' K
   63  | J '%' K
   64  | K

   65 K: '-' L
   66  | '!' L

   67 L: '(' E ')'
   68  | E


Grammar

    0 $accept: Program $end

    1 Program: VarDecList FuncList

    2 VarDecList: %empty

    3 FuncList: Func FuncList
    4         | %empty

    5 Func: RetType ID '(' ParamList ')' Block

    6 RetType: TK_PR_INT
    7        | TK_PR_FLOAT
    8        | TK_PR_BOOL
    9        | TK_PR_CHAR

   10 ParamList: %empty

   11 Block: '{' CommandList '}'

   12 CommandList: Command ';' CommandList
   13            | %empty

   14 Command: Block
   15        | FuncCall

   16 FuncCall: ID '(' ExprList ')'

   17 ID: TK_IDENTIFICADOR

   18 ExprList: %empty


Terminals, with rules where they appear

    $end (0) 0
    '!' (33)
    '%' (37)
    '(' (40) 5 16
    ')' (41) 5 16
    '*' (42)
    '+' (43)
    ',' (44)
    '-' (45)
    '/' (47)
    ';' (59) 12
    '[' (91)
    ']' (93)
    '{' (123) 11
    '}' (125) 11
    error (256)
    TK_PR_INT (258) 6
    TK_PR_FLOAT (259) 7
    TK_PR_BOOL (260) 8
    TK_PR_CHAR (261) 9
    TK_PR_IF (262)
    TK_PR_THEN (263)
    TK_PR_ELSE (264)
    TK_PR_WHILE (265)
    TK_PR_INPUT (266)
    TK_PR_OUTPUT (267)
    TK_PR_RETURN (268)
    TK_PR_FOR (269)
    TK_OC_LE (270)
    TK_OC_GE (271)
    TK_OC_EQ (272)
    TK_OC_NE (273)
    TK_OC_AND (274)
    TK_OC_OR (275)
    TK_LIT_INT (276)
    TK_LIT_FLOAT (277)
    TK_LIT_FALSE (278)
    TK_LIT_TRUE (279)
    TK_LIT_CHAR (280)
    TK_IDENTIFICADOR (281) 17
    TK_ERRO (282)
    "return" (283)


Nonterminals, with rules where they appear

    $accept (43)
        on left: 0
    Program (44)
        on left: 1
        on right: 0
    VarDecList (45)
        on left: 2
        on right: 1
    FuncList (46)
        on left: 3 4
        on right: 1 3
    Func (47)
        on left: 5
        on right: 3
    RetType (48)
        on left: 6 7 8 9
        on right: 5
    ParamList (49)
        on left: 10
        on right: 5
    Block (50)
        on left: 11
        on right: 5 14
    CommandList (51)
        on left: 12 13
        on right: 11 12
    Command (52)
        on left: 14 15
        on right: 12
    FuncCall (53)
        on left: 16
        on right: 15
    ID (54)
        on left: 17
        on right: 5 16
    ExprList (55)
        on left: 18
        on right: 16


State 0

    0 $accept: . Program $end

    $default  reduce using rule 2 (VarDecList)

    Program     go to state 1
    VarDecList  go to state 2


State 1

    0 $accept: Program . $end

    $end  shift, and go to state 3


State 2

    1 Program: VarDecList . FuncList

    TK_PR_INT    shift, and go to state 4
    TK_PR_FLOAT  shift, and go to state 5
    TK_PR_BOOL   shift, and go to state 6
    TK_PR_CHAR   shift, and go to state 7

    $default  reduce using rule 4 (FuncList)

    FuncList  go to state 8
    Func      go to state 9
    RetType   go to state 10


State 3

    0 $accept: Program $end .

    $default  accept


State 4

    6 RetType: TK_PR_INT .

    $default  reduce using rule 6 (RetType)


State 5

    7 RetType: TK_PR_FLOAT .

    $default  reduce using rule 7 (RetType)


State 6

    8 RetType: TK_PR_BOOL .

    $default  reduce using rule 8 (RetType)


State 7

    9 RetType: TK_PR_CHAR .

    $default  reduce using rule 9 (RetType)


State 8

    1 Program: VarDecList FuncList .

    $default  reduce using rule 1 (Program)


State 9

    3 FuncList: Func . FuncList

    TK_PR_INT    shift, and go to state 4
    TK_PR_FLOAT  shift, and go to state 5
    TK_PR_BOOL   shift, and go to state 6
    TK_PR_CHAR   shift, and go to state 7

    $default  reduce using rule 4 (FuncList)

    FuncList  go to state 11
    Func      go to state 9
    RetType   go to state 10


State 10

    5 Func: RetType . ID '(' ParamList ')' Block

    TK_IDENTIFICADOR  shift, and go to state 12

    ID  go to state 13


State 11

    3 FuncList: Func FuncList .

    $default  reduce using rule 3 (FuncList)


State 12

   17 ID: TK_IDENTIFICADOR .

    $default  reduce using rule 17 (ID)


State 13

    5 Func: RetType ID . '(' ParamList ')' Block

    '('  shift, and go to state 14


State 14

    5 Func: RetType ID '(' . ParamList ')' Block

    $default  reduce using rule 10 (ParamList)

    ParamList  go to state 15


State 15

    5 Func: RetType ID '(' ParamList . ')' Block

    ')'  shift, and go to state 16


State 16

    5 Func: RetType ID '(' ParamList ')' . Block

    '{'  shift, and go to state 17

    Block  go to state 18


State 17

   11 Block: '{' . CommandList '}'

    TK_IDENTIFICADOR  shift, and go to state 12
    '{'               shift, and go to state 17

    $default  reduce using rule 13 (CommandList)

    Block        go to state 19
    CommandList  go to state 20
    Command      go to state 21
    FuncCall     go to state 22
    ID           go to state 23


State 18

    5 Func: RetType ID '(' ParamList ')' Block .

    $default  reduce using rule 5 (Func)


State 19

   14 Command: Block .

    $default  reduce using rule 14 (Command)


State 20

   11 Block: '{' CommandList . '}'

    '}'  shift, and go to state 24


State 21

   12 CommandList: Command . ';' CommandList

    ';'  shift, and go to state 25


State 22

   15 Command: FuncCall .

    $default  reduce using rule 15 (Command)


State 23

   16 FuncCall: ID . '(' ExprList ')'

    '('  shift, and go to state 26


State 24

   11 Block: '{' CommandList '}' .

    $default  reduce using rule 11 (Block)


State 25

   12 CommandList: Command ';' . CommandList

    TK_IDENTIFICADOR  shift, and go to state 12
    '{'               shift, and go to state 17

    $default  reduce using rule 13 (CommandList)

    Block        go to state 19
    CommandList  go to state 27
    Command      go to state 21
    FuncCall     go to state 22
    ID           go to state 23


State 26

   16 FuncCall: ID '(' . ExprList ')'

    $default  reduce using rule 18 (ExprList)

    ExprList  go to state 28


State 27

   12 CommandList: Command ';' CommandList .

    $default  reduce using rule 12 (CommandList)


State 28

   16 FuncCall: ID '(' ExprList . ')'

    ')'  shift, and go to state 29


State 29

   16 FuncCall: ID '(' ExprList ')' .

    $default  reduce using rule 16 (FuncCall)
